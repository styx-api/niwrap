{
  "name": "mris_fwhm",
  "tool-version": "7.4.1",
  "description": "Smooths surface data and/or estimates FWHM",
  "command-line": "mris_fwhm [INPUT_FILE] [SUBJECT] [HEMI] [SURF] [LABEL_FILE] [CORTEX_FLAG] [MASK_FILE] [X_MATRIX] [DETREND_ORDER] [SMOOTH_ONLY_FLAG] [NO_DETREND_FLAG] [SQR_FLAG] [SUM_FILE] [DAT_FILE] [AR1DAT_FILE] [AR1VOL] [FWHMMAP] [PRUNE_FLAG] [NO_PRUNE_FLAG] [OUT_MASK] [VARNORM_FLAG] [FWHM] [NITERS_ONLY] [OUTPUT_FILE] [SD] [SYNTH_FLAG] [SYNTH_FRAMES] [THREADS] [DEBUG_FLAG] [CHECKOPTS_FLAG] [VERSION_FLAG]",
  "container-image": {
    "type": "docker",
    "image": "freesurfer/freesurfer:7.4.1"
  },
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "input_file",
      "name": "Input File",
      "description": "Input data file.",
      "type": "File",
      "value-key": "[INPUT_FILE]",
      "optional": false,
      "command-line-flag": "--i"
    },
    {
      "id": "subject",
      "name": "Subject",
      "description": "Subject whose surface the input is defined on.",
      "type": "String",
      "value-key": "[SUBJECT]",
      "optional": false,
      "command-line-flag": "--subject"
    },
    {
      "id": "hemi",
      "name": "Hemisphere",
      "description": "Hemifield that the input is defined on. Legal values are lh and rh.",
      "type": "String",
      "value-key": "[HEMI]",
      "optional": false,
      "command-line-flag": "--hemi"
    },
    {
      "id": "surf",
      "name": "Surface",
      "description": "Surface name to compute AR1 on. Default is white.",
      "type": "String",
      "value-key": "[SURF]",
      "optional": true,
      "command-line-flag": "--surf"
    },
    {
      "id": "label_file",
      "name": "Label File",
      "description": "Label file to be used as a mask.",
      "type": "File",
      "value-key": "[LABEL_FILE]",
      "optional": true,
      "command-line-flag": "--label"
    },
    {
      "id": "cortex_flag",
      "name": "Cortex Flag",
      "description": "Use hemi.cortex.label as a mask.",
      "type": "Flag",
      "value-key": "[CORTEX_FLAG]",
      "command-line-flag": "--cortex"
    },
    {
      "id": "mask_file",
      "name": "Mask File",
      "description": "Mask file. Compute AR1 only over voxels in the given mask.",
      "type": "File",
      "value-key": "[MASK_FILE]",
      "optional": true,
      "command-line-flag": "--mask"
    },
    {
      "id": "x_matrix",
      "name": "Detrending Matrix",
      "description": "Detrend data with the matrix in x.mat.",
      "type": "File",
      "value-key": "[X_MATRIX]",
      "optional": true,
      "command-line-flag": "--X"
    },
    {
      "id": "detrend_order",
      "name": "Detrend Order",
      "description": "Order of polynomial detrending.",
      "type": "Number",
      "value-key": "[DETREND_ORDER]",
      "optional": true,
      "command-line-flag": "--detrend"
    },
    {
      "id": "smooth_only_flag",
      "name": "Smooth Only Flag",
      "description": "Only smooth the data, implies --no-detrend.",
      "type": "Flag",
      "value-key": "[SMOOTH_ONLY_FLAG]",
      "command-line-flag": "--smooth-only"
    },
    {
      "id": "no_detrend_flag",
      "name": "No Detrend Flag",
      "description": "Turn off polynomial detrending.",
      "type": "Flag",
      "value-key": "[NO_DETREND_FLAG]",
      "command-line-flag": "--no-detrend"
    },
    {
      "id": "sqr_flag",
      "name": "Square Input Flag",
      "description": "Compute square of input before smoothing.",
      "type": "Flag",
      "value-key": "[SQR_FLAG]",
      "command-line-flag": "--sqr"
    },
    {
      "id": "sum_file",
      "name": "Sum File",
      "description": "Prints ascii summary to sumfile.",
      "type": "String",
      "value-key": "[SUM_FILE]",
      "optional": true,
      "command-line-flag": "--sum"
    },
    {
      "id": "dat_file",
      "name": "Dat File",
      "description": "File for FWHM data.",
      "type": "String",
      "value-key": "[DAT_FILE]",
      "optional": true,
      "command-line-flag": "--dat"
    },
    {
      "id": "ar1dat_file",
      "name": "AR1 Data File",
      "description": "File containing ar1mean and ar1std.",
      "type": "String",
      "value-key": "[AR1DAT_FILE]",
      "optional": true,
      "command-line-flag": "--ar1dat"
    },
    {
      "id": "ar1vol",
      "name": "AR1 Volume",
      "description": "Save spatial AR1 as an overlay.",
      "type": "String",
      "value-key": "[AR1VOL]",
      "optional": true,
      "command-line-flag": "--ar1"
    },
    {
      "id": "fwhmmap",
      "name": "FWHM Map",
      "description": "Save vertex-wise spatial FWHM as an overlay.",
      "type": "String",
      "value-key": "[FWHMMAP]",
      "optional": true,
      "command-line-flag": "--fwhm-map"
    },
    {
      "id": "prune_flag",
      "name": "Prune Flag",
      "description": "Remove any voxel that is zero in any subject (after any inversion).",
      "type": "Flag",
      "value-key": "[PRUNE_FLAG]",
      "command-line-flag": "--prune"
    },
    {
      "id": "no_prune_flag",
      "name": "No Prune Flag",
      "description": "Do not prune (default).",
      "type": "Flag",
      "value-key": "[NO_PRUNE_FLAG]",
      "command-line-flag": "--no-prune"
    },
    {
      "id": "out_mask",
      "name": "Out Mask",
      "description": "File to save the final mask.",
      "type": "String",
      "value-key": "[OUT_MASK]",
      "optional": true,
      "command-line-flag": "--out-mask"
    },
    {
      "id": "varnorm_flag",
      "name": "Variance Normalize Flag",
      "description": "Normalize the variance across space within any mask.",
      "type": "Flag",
      "value-key": "[VARNORM_FLAG]",
      "command-line-flag": "--varnorm"
    },
    {
      "id": "fwhm",
      "name": "FWHM Value",
      "description": "Smooth input by the specified FWHM in mm.",
      "type": "Number",
      "value-key": "[FWHM]",
      "optional": true,
      "command-line-flag": "--fwhm"
    },
    {
      "id": "niters_only",
      "name": "Niters Only",
      "description": "File that reports the number of iterations needed to achieve the specified FWHM.",
      "type": "String",
      "value-key": "[NITERS_ONLY]",
      "optional": true,
      "command-line-flag": "--niters-only"
    },
    {
      "id": "output_file",
      "name": "Output File",
      "description": "Output file to save the processed data.",
      "type": "String",
      "value-key": "[OUTPUT_FILE]",
      "optional": false,
      "command-line-flag": "--o"
    },
    {
      "id": "sd",
      "name": "Subjects Directory",
      "description": "Subjects directory.",
      "type": "String",
      "value-key": "[SD]",
      "optional": true,
      "command-line-flag": "--sd"
    },
    {
      "id": "synth_flag",
      "name": "Synthesize Input Flag",
      "description": "Synthesize input with white gaussian noise.",
      "type": "Flag",
      "value-key": "[SYNTH_FLAG]",
      "command-line-flag": "--synth"
    },
    {
      "id": "synth_frames",
      "name": "Number of Synth Frames",
      "description": "Number of frames for synthesized input.",
      "type": "Number",
      "value-key": "[SYNTH_FRAMES]",
      "optional": true,
      "command-line-flag": "--synth-frames"
    },
    {
      "id": "threads",
      "name": "Number of Threads",
      "description": "Number of threads to use.",
      "type": "Number",
      "value-key": "[THREADS]",
      "optional": true,
      "command-line-flag": "--threads"
    },
    {
      "id": "debug_flag",
      "name": "Debug Flag",
      "description": "Turn on debugging.",
      "type": "Flag",
      "value-key": "[DEBUG_FLAG]",
      "command-line-flag": "--debug"
    },
    {
      "id": "checkopts_flag",
      "name": "Check Options Flag",
      "description": "Don't run anything, just check options and exit.",
      "type": "Flag",
      "value-key": "[CHECKOPTS_FLAG]",
      "command-line-flag": "--checkopts"
    },
    {
      "id": "version_flag",
      "name": "Version Flag",
      "description": "Print out version and exit.",
      "type": "Flag",
      "value-key": "[VERSION_FLAG]",
      "command-line-flag": "--version"
    }
  ],
  "author": "FreeSurfer Developers",
  "url": "https://github.com/freesurfer/freesurfer"
}
