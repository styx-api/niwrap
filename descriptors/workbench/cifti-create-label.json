{
  "tool-version": "1.5.0",
  "name": "cifti-create-label",
  "author": "Connectome Workbench Developers",
  "command-line": "wb_command -cifti-create-label [CIFTI_OUT] [VOLUME] [LEFT_LABEL] [RIGHT_LABEL] [CEREBELLUM_LABEL]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/connectome_workbench:1.5.0-freesurfer-update"
  },
  "description": "Create a cifti label file.\n\nAll input files must have the same number of columns/subvolumes.  Only the specified components will be in the output cifti.  At least one component must be specified.\n\nThe -volume option requires two volume arguments, the label-volume argument contains all labels you want to display (e.g. nuclei of the thalamus), whereas the structure-label-volume argument contains all CIFTI voxel-based structures you want to include data within (e.g. THALAMUS_LEFT, THALAMUS_RIGHT, etc).  See -volume-label-import and -volume-help for format details of label volume files.  If you just want the labels in voxels to be the structure names, you may use the same file for both arguments.  The structure-label-volume must use some of the label names from this list, all other label names in the structure-label-volume will be ignored:\n\nCORTEX_LEFT\nCORTEX_RIGHT\nCEREBELLUM\nACCUMBENS_LEFT\nACCUMBENS_RIGHT\nALL_GREY_MATTER\nALL_WHITE_MATTER\nAMYGDALA_LEFT\nAMYGDALA_RIGHT\nBRAIN_STEM\nCAUDATE_LEFT\nCAUDATE_RIGHT\nCEREBELLAR_WHITE_MATTER_LEFT\nCEREBELLAR_WHITE_MATTER_RIGHT\nCEREBELLUM_LEFT\nCEREBELLUM_RIGHT\nCEREBRAL_WHITE_MATTER_LEFT\nCEREBRAL_WHITE_MATTER_RIGHT\nCORTEX\nDIENCEPHALON_VENTRAL_LEFT\nDIENCEPHALON_VENTRAL_RIGHT\nHIPPOCAMPUS_LEFT\nHIPPOCAMPUS_RIGHT\nINVALID\nOTHER\nOTHER_GREY_MATTER\nOTHER_WHITE_MATTER\nPALLIDUM_LEFT\nPALLIDUM_RIGHT\nPUTAMEN_LEFT\nPUTAMEN_RIGHT\nTHALAMUS_LEFT\nTHALAMUS_RIGHT",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "cifti_out",
      "name": "cifti_out",
      "type": "String",
      "description": "the output cifti file",
      "optional": false,
      "value-key": "[CIFTI_OUT]"
    },
    {
      "id": "volume",
      "name": "volume",
      "description": "volume component",
      "type": {
        "id": "volume",
        "name": "volume",
        "description": "volume component",
        "command-line": "-volume [LABEL_VOLUME] [STRUCTURE_LABEL_VOLUME]",
        "inputs": [
          {
            "id": "label_volume",
            "name": "label_volume",
            "description": "label volume file containing the data to be copied",
            "optional": false,
            "value-key": "[LABEL_VOLUME]",
            "type": "File"
          },
          {
            "id": "structure_label_volume",
            "name": "structure_label_volume",
            "description": "label volume file that defines which voxels to use",
            "optional": false,
            "value-key": "[STRUCTURE_LABEL_VOLUME]",
            "type": "File"
          }
        ]
      },
      "optional": true,
      "value-key": "[VOLUME]",
      "list": false
    },
    {
      "id": "left_label",
      "name": "left_label",
      "description": "label file for left surface",
      "type": {
        "id": "left_label",
        "name": "left_label",
        "description": "label file for left surface",
        "command-line": "-left-label [LABEL] [OPT_ROI_LEFT_ROI_METRIC]",
        "inputs": [
          {
            "id": "label",
            "name": "label",
            "description": "the label file",
            "optional": false,
            "value-key": "[LABEL]",
            "type": "File"
          },
          {
            "id": "opt_roi_left_roi_metric",
            "name": "opt_roi_left_roi_metric",
            "command-line-flag": "-roi-left",
            "description": "roi of vertices to use from left surface: the ROI as a metric file",
            "optional": true,
            "value-key": "[OPT_ROI_LEFT_ROI_METRIC]",
            "type": "File"
          }
        ]
      },
      "optional": true,
      "value-key": "[LEFT_LABEL]",
      "list": false
    },
    {
      "id": "right_label",
      "name": "right_label",
      "description": "label for left surface",
      "type": {
        "id": "right_label",
        "name": "right_label",
        "description": "label for left surface",
        "command-line": "-right-label [LABEL] [OPT_ROI_RIGHT_ROI_METRIC]",
        "inputs": [
          {
            "id": "label",
            "name": "label",
            "description": "the label file",
            "optional": false,
            "value-key": "[LABEL]",
            "type": "File"
          },
          {
            "id": "opt_roi_right_roi_metric",
            "name": "opt_roi_right_roi_metric",
            "command-line-flag": "-roi-right",
            "description": "roi of vertices to use from right surface: the ROI as a metric file",
            "optional": true,
            "value-key": "[OPT_ROI_RIGHT_ROI_METRIC]",
            "type": "File"
          }
        ]
      },
      "optional": true,
      "value-key": "[RIGHT_LABEL]",
      "list": false
    },
    {
      "id": "cerebellum_label",
      "name": "cerebellum_label",
      "description": "label for the cerebellum",
      "type": {
        "id": "cerebellum_label",
        "name": "cerebellum_label",
        "description": "label for the cerebellum",
        "command-line": "-cerebellum-label [LABEL] [OPT_ROI_CEREBELLUM_ROI_METRIC]",
        "inputs": [
          {
            "id": "label",
            "name": "label",
            "description": "the label file",
            "optional": false,
            "value-key": "[LABEL]",
            "type": "File"
          },
          {
            "id": "opt_roi_cerebellum_roi_metric",
            "name": "opt_roi_cerebellum_roi_metric",
            "command-line-flag": "-roi-cerebellum",
            "description": "roi of vertices to use from right surface: the ROI as a metric file",
            "optional": true,
            "value-key": "[OPT_ROI_CEREBELLUM_ROI_METRIC]",
            "type": "File"
          }
        ]
      },
      "optional": true,
      "value-key": "[CEREBELLUM_LABEL]",
      "list": false
    }
  ],
  "output-files": [
    {
      "id": "cifti_out",
      "name": "cifti_out",
      "path-template": "[CIFTI_OUT]",
      "description": "the output cifti file"
    }
  ],
  "url": "https://github.com/Washington-University/workbench"
}
