{
  "tool-version": "1.5.0",
  "name": "cifti-convert",
  "author": "Connectome Workbench Developers",
  "command-line": "wb_command -cifti-convert [TO_GIFTI_EXT] [FROM_GIFTI_EXT] [TO_NIFTI] [FROM_NIFTI] [TO_TEXT] [FROM_TEXT]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/connectome_workbench:1.5.0-freesurfer-update"
  },
  "description": "Dump cifti matrix into other formats.\n\nThis command is used to convert a full CIFTI matrix to/from formats that can be used by programs that don't understand CIFTI.  You must specify exactly one of -to-gifti-ext, -from-gifti-ext, -to-nifti, -from-nifti, -to-text, or -from-text.\n\nIf you want to write an existing CIFTI file with a different CIFTI version, see -file-convert, and its -cifti-version-convert option.\n\nIf you want part of the CIFTI file as a metric, label, or volume file, see -cifti-separate.  If you want to create a CIFTI file from metric and/or volume files, see the -cifti-create-* commands.\n\nIf you want to import a matrix that is restricted to an ROI, first create a template CIFTI file matching that ROI using a -cifti-create-* command.  After importing to CIFTI, you can then expand the file into a standard brainordinates space with -cifti-create-dense-from-template.  If you want to export only part of a CIFTI file, first create an roi-restricted CIFTI file with -cifti-restrict-dense-mapping.\n\nThe -transpose option to -from-gifti-ext is needed if the replacement binary file is in column-major order.\n\nThe -unit options accept these values:\n\nSECOND\nHERTZ\nMETER\nRADIAN",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "to_gifti_ext",
      "name": "to_gifti_ext",
      "description": "convert to GIFTI external binary",
      "type": {
        "id": "to_gifti_ext",
        "name": "to_gifti_ext",
        "description": "convert to GIFTI external binary",
        "command-line": "-to-gifti-ext [CIFTI_IN] [GIFTI_OUT]",
        "inputs": [
          {
            "id": "cifti_in",
            "name": "cifti_in",
            "description": "the input cifti file",
            "optional": false,
            "value-key": "[CIFTI_IN]",
            "type": "File"
          },
          {
            "id": "gifti_out",
            "name": "gifti_out",
            "description": "output - the output gifti file",
            "optional": false,
            "value-key": "[GIFTI_OUT]",
            "type": "String"
          }
        ]
      },
      "optional": true,
      "value-key": "[TO_GIFTI_EXT]"
    },
    {
      "id": "from_gifti_ext",
      "name": "from_gifti_ext",
      "description": "convert a GIFTI made with this command back into a CIFTI",
      "type": {
        "id": "from_gifti_ext",
        "name": "from_gifti_ext",
        "description": "convert a GIFTI made with this command back into a CIFTI",
        "command-line": "-from-gifti-ext [GIFTI_IN] [CIFTI_OUT] [RESET_TIMEPOINTS] [OPT_RESET_SCALARS] [OPT_COLUMN_RESET_SCALARS] [REPLACE_BINARY]",
        "inputs": [
          {
            "id": "gifti_in",
            "name": "gifti_in",
            "description": "the input gifti file",
            "optional": false,
            "value-key": "[GIFTI_IN]",
            "type": "String"
          },
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "type": "String",
            "description": "the output cifti file",
            "optional": false,
            "value-key": "[CIFTI_OUT]"
          },
          {
            "id": "reset_timepoints",
            "name": "reset_timepoints",
            "description": "reset the mapping along rows to timepoints, taking length from the gifti file",
            "type": {
              "id": "reset_timepoints",
              "name": "reset_timepoints",
              "description": "reset the mapping along rows to timepoints, taking length from the gifti file",
              "command-line": "-reset-timepoints [TIMESTEP] [TIMESTART] [OPT_UNIT_UNIT]",
              "inputs": [
                {
                  "id": "timestep",
                  "name": "timestep",
                  "description": "the desired time between frames",
                  "optional": false,
                  "value-key": "[TIMESTEP]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "timestart",
                  "name": "timestart",
                  "description": "the desired time offset of the initial frame",
                  "optional": false,
                  "value-key": "[TIMESTART]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "opt_unit_unit",
                  "name": "opt_unit_unit",
                  "command-line-flag": "-unit",
                  "description": "use a unit other than time: unit identifier (default SECOND)",
                  "optional": true,
                  "value-key": "[OPT_UNIT_UNIT]",
                  "type": "String"
                }
              ]
            },
            "optional": true,
            "value-key": "[RESET_TIMEPOINTS]"
          },
          {
            "id": "opt_reset_scalars",
            "name": "opt_reset_scalars",
            "command-line-flag": "-reset-scalars",
            "description": "reset mapping along rows to scalars, taking length from the gifti file",
            "type": "Flag",
            "value-key": "[OPT_RESET_SCALARS]"
          },
          {
            "id": "opt_column_reset_scalars",
            "name": "opt_column_reset_scalars",
            "command-line-flag": "-column-reset-scalars",
            "description": "reset mapping along columns to scalar (useful for changing number of series in a sdseries file)",
            "type": "Flag",
            "value-key": "[OPT_COLUMN_RESET_SCALARS]"
          },
          {
            "id": "replace_binary",
            "name": "replace_binary",
            "description": "replace data with a binary file",
            "type": {
              "id": "replace_binary",
              "name": "replace_binary",
              "description": "replace data with a binary file",
              "command-line": "-replace-binary [BINARY_IN] [OPT_FLIP_ENDIAN] [OPT_TRANSPOSE]",
              "inputs": [
                {
                  "id": "binary_in",
                  "name": "binary_in",
                  "description": "the binary file that contains replacement data",
                  "optional": false,
                  "value-key": "[BINARY_IN]",
                  "type": "String"
                },
                {
                  "id": "opt_flip_endian",
                  "name": "opt_flip_endian",
                  "command-line-flag": "-flip-endian",
                  "description": "byteswap the binary file",
                  "type": "Flag",
                  "value-key": "[OPT_FLIP_ENDIAN]"
                },
                {
                  "id": "opt_transpose",
                  "name": "opt_transpose",
                  "command-line-flag": "-transpose",
                  "description": "transpose the binary file",
                  "type": "Flag",
                  "value-key": "[OPT_TRANSPOSE]"
                }
              ]
            },
            "optional": true,
            "value-key": "[REPLACE_BINARY]"
          }
        ],
        "output-files": [
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "path-template": "[CIFTI_OUT]",
            "description": "the output cifti file"
          }
        ]
      },
      "optional": true,
      "value-key": "[FROM_GIFTI_EXT]"
    },
    {
      "id": "to_nifti",
      "name": "to_nifti",
      "description": "convert to NIFTI1",
      "type": {
        "id": "to_nifti",
        "name": "to_nifti",
        "description": "convert to NIFTI1",
        "command-line": "-to-nifti [CIFTI_IN] [NIFTI_OUT] [OPT_SMALLER_FILE] [OPT_SMALLER_DIMS]",
        "inputs": [
          {
            "id": "cifti_in",
            "name": "cifti_in",
            "description": "the input cifti file",
            "optional": false,
            "value-key": "[CIFTI_IN]",
            "type": "File"
          },
          {
            "id": "nifti_out",
            "name": "nifti_out",
            "type": "String",
            "description": "the output nifti file",
            "optional": false,
            "value-key": "[NIFTI_OUT]"
          },
          {
            "id": "opt_smaller_file",
            "name": "opt_smaller_file",
            "command-line-flag": "-smaller-file",
            "description": "use better-fitting dimension lengths",
            "type": "Flag",
            "value-key": "[OPT_SMALLER_FILE]"
          },
          {
            "id": "opt_smaller_dims",
            "name": "opt_smaller_dims",
            "command-line-flag": "-smaller-dims",
            "description": "minimize the largest dimension, for tools that don't like large indices",
            "type": "Flag",
            "value-key": "[OPT_SMALLER_DIMS]"
          }
        ],
        "output-files": [
          {
            "id": "nifti_out",
            "name": "nifti_out",
            "path-template": "[NIFTI_OUT]",
            "description": "the output nifti file"
          }
        ]
      },
      "optional": true,
      "value-key": "[TO_NIFTI]"
    },
    {
      "id": "from_nifti",
      "name": "from_nifti",
      "description": "convert a NIFTI (1 or 2) file made with this command back into CIFTI",
      "type": {
        "id": "from_nifti",
        "name": "from_nifti",
        "description": "convert a NIFTI (1 or 2) file made with this command back into CIFTI",
        "command-line": "-from-nifti [NIFTI_IN] [CIFTI_TEMPLATE] [CIFTI_OUT] [RESET_TIMEPOINTS] [OPT_RESET_SCALARS]",
        "inputs": [
          {
            "id": "nifti_in",
            "name": "nifti_in",
            "description": "the input nifti file",
            "optional": false,
            "value-key": "[NIFTI_IN]",
            "type": "File"
          },
          {
            "id": "cifti_template",
            "name": "cifti_template",
            "description": "a cifti file with the dimension(s) and mapping(s) that should be used",
            "optional": false,
            "value-key": "[CIFTI_TEMPLATE]",
            "type": "File"
          },
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "type": "String",
            "description": "the output cifti file",
            "optional": false,
            "value-key": "[CIFTI_OUT]"
          },
          {
            "id": "reset_timepoints",
            "name": "reset_timepoints",
            "description": "reset the mapping along rows to timepoints, taking length from the nifti file",
            "type": {
              "id": "reset_timepoints",
              "name": "reset_timepoints",
              "description": "reset the mapping along rows to timepoints, taking length from the nifti file",
              "command-line": "-reset-timepoints [TIMESTEP] [TIMESTART] [OPT_UNIT_UNIT]",
              "inputs": [
                {
                  "id": "timestep",
                  "name": "timestep",
                  "description": "the desired time between frames",
                  "optional": false,
                  "value-key": "[TIMESTEP]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "timestart",
                  "name": "timestart",
                  "description": "the desired time offset of the initial frame",
                  "optional": false,
                  "value-key": "[TIMESTART]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "opt_unit_unit",
                  "name": "opt_unit_unit",
                  "command-line-flag": "-unit",
                  "description": "use a unit other than time: unit identifier (default SECOND)",
                  "optional": true,
                  "value-key": "[OPT_UNIT_UNIT]",
                  "type": "String"
                }
              ]
            },
            "optional": true,
            "value-key": "[RESET_TIMEPOINTS]"
          },
          {
            "id": "opt_reset_scalars",
            "name": "opt_reset_scalars",
            "command-line-flag": "-reset-scalars",
            "description": "reset mapping along rows to scalars, taking length from the nifti file",
            "type": "Flag",
            "value-key": "[OPT_RESET_SCALARS]"
          }
        ],
        "output-files": [
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "path-template": "[CIFTI_OUT]",
            "description": "the output cifti file"
          }
        ]
      },
      "optional": true,
      "value-key": "[FROM_NIFTI]"
    },
    {
      "id": "to_text",
      "name": "to_text",
      "description": "convert to a plain text file",
      "type": {
        "id": "to_text",
        "name": "to_text",
        "description": "convert to a plain text file",
        "command-line": "-to-text [CIFTI_IN] [TEXT_OUT] [OPT_COL_DELIM_DELIM_STRING]",
        "inputs": [
          {
            "id": "cifti_in",
            "name": "cifti_in",
            "description": "the input cifti file",
            "optional": false,
            "value-key": "[CIFTI_IN]",
            "type": "File"
          },
          {
            "id": "text_out",
            "name": "text_out",
            "description": "output - the output text file",
            "optional": false,
            "value-key": "[TEXT_OUT]",
            "type": "String"
          },
          {
            "id": "opt_col_delim_delim_string",
            "name": "opt_col_delim_delim_string",
            "command-line-flag": "-col-delim",
            "description": "choose string to put between elements in a row: the string to use (default is a tab character)",
            "optional": true,
            "value-key": "[OPT_COL_DELIM_DELIM_STRING]",
            "type": "String"
          }
        ]
      },
      "optional": true,
      "value-key": "[TO_TEXT]"
    },
    {
      "id": "from_text",
      "name": "from_text",
      "description": "convert from plain text to cifti",
      "type": {
        "id": "from_text",
        "name": "from_text",
        "description": "convert from plain text to cifti",
        "command-line": "-from-text [TEXT_IN] [CIFTI_TEMPLATE] [CIFTI_OUT] [OPT_COL_DELIM_DELIM_STRING] [RESET_TIMEPOINTS] [OPT_RESET_SCALARS]",
        "inputs": [
          {
            "id": "text_in",
            "name": "text_in",
            "description": "the input text file",
            "optional": false,
            "value-key": "[TEXT_IN]",
            "type": "String"
          },
          {
            "id": "cifti_template",
            "name": "cifti_template",
            "description": "a cifti file with the dimension(s) and mapping(s) that should be used",
            "optional": false,
            "value-key": "[CIFTI_TEMPLATE]",
            "type": "File"
          },
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "type": "String",
            "description": "the output cifti file",
            "optional": false,
            "value-key": "[CIFTI_OUT]"
          },
          {
            "id": "opt_col_delim_delim_string",
            "name": "opt_col_delim_delim_string",
            "command-line-flag": "-col-delim",
            "description": "specify string that is between elements in a row: the string to use (default is any whitespace)",
            "optional": true,
            "value-key": "[OPT_COL_DELIM_DELIM_STRING]",
            "type": "String"
          },
          {
            "id": "reset_timepoints",
            "name": "reset_timepoints",
            "description": "reset the mapping along rows to timepoints, taking length from the text file",
            "type": {
              "id": "reset_timepoints",
              "name": "reset_timepoints",
              "description": "reset the mapping along rows to timepoints, taking length from the text file",
              "command-line": "-reset-timepoints [TIMESTEP] [TIMESTART] [OPT_UNIT_UNIT]",
              "inputs": [
                {
                  "id": "timestep",
                  "name": "timestep",
                  "description": "the desired time between frames",
                  "optional": false,
                  "value-key": "[TIMESTEP]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "timestart",
                  "name": "timestart",
                  "description": "the desired time offset of the initial frame",
                  "optional": false,
                  "value-key": "[TIMESTART]",
                  "type": "Number",
                  "integer": false
                },
                {
                  "id": "opt_unit_unit",
                  "name": "opt_unit_unit",
                  "command-line-flag": "-unit",
                  "description": "use a unit other than time: unit identifier (default SECOND)",
                  "optional": true,
                  "value-key": "[OPT_UNIT_UNIT]",
                  "type": "String"
                }
              ]
            },
            "optional": true,
            "value-key": "[RESET_TIMEPOINTS]"
          },
          {
            "id": "opt_reset_scalars",
            "name": "opt_reset_scalars",
            "command-line-flag": "-reset-scalars",
            "description": "reset mapping along rows to scalars, taking length from the text file",
            "type": "Flag",
            "value-key": "[OPT_RESET_SCALARS]"
          }
        ],
        "output-files": [
          {
            "id": "cifti_out",
            "name": "cifti_out",
            "path-template": "[CIFTI_OUT]",
            "description": "the output cifti file"
          }
        ]
      },
      "optional": true,
      "value-key": "[FROM_TEXT]"
    }
  ],
  "url": "https://github.com/Washington-University/workbench"
}
