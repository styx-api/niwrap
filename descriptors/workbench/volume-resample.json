{
  "tool-version": "1.5.0",
  "name": "volume-resample",
  "author": "Connectome Workbench Developers",
  "command-line": "wb_command -volume-resample [VOLUME_IN] [VOLUME_SPACE] [METHOD] [VOLUME_OUT] [AFFINE] [AFFINE_SERIES] [WARP]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/connectome_workbench:1.5.0-freesurfer-update"
  },
  "description": "Transform and resample a volume file.\n\nResample a volume file with an arbitrary list of transformations.  You may specify -affine, -warp, and -affine-series multiple times each, and they will be used in the order specified.  For instance, for rigid motion correction followed by nonlinear atlas registration, specify -affine-series first, then -warp.  The recommended methods are CUBIC (cubic spline) for most data, and ENCLOSING_VOXEL for label data.  The parameter <method> must be one of:\n\nCUBIC\nENCLOSING_VOXEL\nTRILINEAR",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "volume_in",
      "name": "volume_in",
      "description": "volume to resample",
      "optional": false,
      "value-key": "[VOLUME_IN]",
      "type": "File"
    },
    {
      "id": "volume_space",
      "name": "volume_space",
      "description": "a volume file in the volume space you want for the output",
      "optional": false,
      "value-key": "[VOLUME_SPACE]",
      "type": "String"
    },
    {
      "id": "method",
      "name": "method",
      "description": "the resampling method",
      "optional": false,
      "value-key": "[METHOD]",
      "type": "String"
    },
    {
      "id": "volume_out",
      "name": "volume_out",
      "type": "String",
      "description": "the output volume",
      "optional": false,
      "value-key": "[VOLUME_OUT]"
    },
    {
      "id": "affine",
      "name": "affine",
      "description": "add an affine transform",
      "type": {
        "id": "affine",
        "name": "affine",
        "description": "add an affine transform",
        "command-line": "-affine [AFFINE] [FLIRT]",
        "inputs": [
          {
            "id": "affine",
            "name": "affine",
            "description": "the affine file to use",
            "optional": false,
            "value-key": "[AFFINE]",
            "type": "String"
          },
          {
            "id": "flirt",
            "name": "flirt",
            "description": "MUST be used if affine is a flirt affine",
            "type": {
              "id": "flirt",
              "name": "flirt",
              "description": "MUST be used if affine is a flirt affine",
              "command-line": "-flirt [SOURCE_VOLUME] [TARGET_VOLUME]",
              "inputs": [
                {
                  "id": "source_volume",
                  "name": "source_volume",
                  "description": "the source volume used when generating the affine",
                  "optional": false,
                  "value-key": "[SOURCE_VOLUME]",
                  "type": "String"
                },
                {
                  "id": "target_volume",
                  "name": "target_volume",
                  "description": "the target volume used when generating the affine",
                  "optional": false,
                  "value-key": "[TARGET_VOLUME]",
                  "type": "String"
                }
              ]
            },
            "optional": true,
            "value-key": "[FLIRT]",
            "list": false
          }
        ]
      },
      "optional": true,
      "value-key": "[AFFINE]",
      "list": true
    },
    {
      "id": "affine_series",
      "name": "affine_series",
      "description": "add an independent affine per-frame",
      "type": {
        "id": "affine_series",
        "name": "affine_series",
        "description": "add an independent affine per-frame",
        "command-line": "-affine-series [AFFINE_SERIES] [FLIRT]",
        "inputs": [
          {
            "id": "affine_series",
            "name": "affine_series",
            "description": "text file containing 12 or 16 numbers per line, each being a row-major flattened affine",
            "optional": false,
            "value-key": "[AFFINE_SERIES]",
            "type": "String"
          },
          {
            "id": "flirt",
            "name": "flirt",
            "description": "MUST be used if the affines are flirt affines",
            "type": {
              "id": "flirt",
              "name": "flirt",
              "description": "MUST be used if the affines are flirt affines",
              "command-line": "-flirt [SOURCE_VOLUME] [TARGET_VOLUME]",
              "inputs": [
                {
                  "id": "source_volume",
                  "name": "source_volume",
                  "description": "the source volume used when generating the affine",
                  "optional": false,
                  "value-key": "[SOURCE_VOLUME]",
                  "type": "String"
                },
                {
                  "id": "target_volume",
                  "name": "target_volume",
                  "description": "the target volume used when generating the affine",
                  "optional": false,
                  "value-key": "[TARGET_VOLUME]",
                  "type": "String"
                }
              ]
            },
            "optional": true,
            "value-key": "[FLIRT]",
            "list": false
          }
        ]
      },
      "optional": true,
      "value-key": "[AFFINE_SERIES]",
      "list": true
    },
    {
      "id": "warp",
      "name": "warp",
      "description": "add a nonlinear warpfield transform",
      "type": {
        "id": "warp",
        "name": "warp",
        "description": "add a nonlinear warpfield transform",
        "command-line": "-warp [WARPFIELD] [OPT_FNIRT_SOURCE_VOLUME]",
        "inputs": [
          {
            "id": "warpfield",
            "name": "warpfield",
            "description": "the warpfield file",
            "optional": false,
            "value-key": "[WARPFIELD]",
            "type": "String"
          },
          {
            "id": "opt_fnirt_source_volume",
            "name": "opt_fnirt_source_volume",
            "command-line-flag": "-fnirt",
            "description": "MUST be used if using a fnirt warpfield: the source volume used when generating the warpfield",
            "optional": true,
            "value-key": "[OPT_FNIRT_SOURCE_VOLUME]",
            "type": "String"
          }
        ]
      },
      "optional": true,
      "value-key": "[WARP]",
      "list": true
    }
  ],
  "output-files": [
    {
      "id": "volume_out",
      "name": "volume_out",
      "path-template": "[VOLUME_OUT]",
      "description": "the output volume"
    }
  ],
  "url": "https://github.com/Washington-University/workbench"
}
