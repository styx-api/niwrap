{
  "tool-version": "1.5.0",
  "name": "volume-extrema",
  "author": "Connectome Workbench Developers",
  "command-line": "wb_command -volume-extrema [VOLUME_IN] [DISTANCE] [VOLUME_OUT] [PRESMOOTH] [OPT_ROI_ROI_VOLUME] [THRESHOLD] [OPT_SUM_SUBVOLS] [OPT_CONSOLIDATE_MODE] [OPT_ONLY_MAXIMA] [OPT_ONLY_MINIMA] [OPT_SUBVOLUME_SUBVOLUME]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/connectome_workbench:1.5.0-freesurfer-update"
  },
  "description": "Find extrema in a volume file.\n\nFinds extrema in a volume file, such that no two extrema of the same type are within <distance> of each other.  The extrema are labeled as -1 for minima, 1 for maxima, 0 otherwise.  If -only-maxima or -only-minima is specified, then it will ignore extrema not of the specified type.  These options are mutually exclusive.\n\nIf -sum-subvols is specified, these extrema subvolumes are summed, and the output has a single subvolume with this result.\n\nBy default, a datapoint is an extrema only if it is more extreme than every other datapoint that is within <distance> from it.  If -consolidate-mode is used, it instead starts by finding all datapoints that are more extreme than their immediate neighbors, then while there are any extrema within <distance> of each other, take the two extrema closest to each other and merge them into one by a weighted average based on how many original extrema have been merged into each.\n\nBy default, all input subvolumes are used with no smoothing, use -subvolume to specify a single subvolume to use, and -presmooth to smooth the input before finding the extrema.",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "volume_in",
      "name": "volume_in",
      "description": "volume file to find the extrema of",
      "optional": false,
      "value-key": "[VOLUME_IN]",
      "type": "File"
    },
    {
      "id": "distance",
      "name": "distance",
      "description": "the minimum distance between identified extrema of the same type",
      "optional": false,
      "value-key": "[DISTANCE]",
      "type": "Number",
      "integer": false
    },
    {
      "id": "volume_out",
      "name": "volume_out",
      "type": "String",
      "description": "the output extrema volume",
      "optional": false,
      "value-key": "[VOLUME_OUT]"
    },
    {
      "id": "presmooth",
      "name": "presmooth",
      "description": "smooth the volume before finding extrema",
      "type": {
        "id": "presmooth",
        "name": "presmooth",
        "description": "smooth the volume before finding extrema",
        "command-line": "-presmooth [KERNEL] [OPT_FWHM]",
        "inputs": [
          {
            "id": "kernel",
            "name": "kernel",
            "description": "the size of the gaussian smoothing kernel in mm, as sigma by default",
            "optional": false,
            "value-key": "[KERNEL]",
            "type": "Number",
            "integer": false
          },
          {
            "id": "opt_fwhm",
            "name": "opt_fwhm",
            "command-line-flag": "-fwhm",
            "description": "kernel size is FWHM, not sigma",
            "type": "Flag",
            "value-key": "[OPT_FWHM]"
          }
        ]
      },
      "optional": true,
      "value-key": "[PRESMOOTH]"
    },
    {
      "id": "opt_roi_roi_volume",
      "name": "opt_roi_roi_volume",
      "command-line-flag": "-roi",
      "description": "ignore values outside the selected area: the area to find extrema in",
      "optional": true,
      "value-key": "[OPT_ROI_ROI_VOLUME]",
      "type": "File"
    },
    {
      "id": "threshold",
      "name": "threshold",
      "description": "ignore small extrema",
      "type": {
        "id": "threshold",
        "name": "threshold",
        "description": "ignore small extrema",
        "command-line": "-threshold [LOW] [HIGH]",
        "inputs": [
          {
            "id": "low",
            "name": "low",
            "description": "the largest value to consider for being a minimum",
            "optional": false,
            "value-key": "[LOW]",
            "type": "Number",
            "integer": false
          },
          {
            "id": "high",
            "name": "high",
            "description": "the smallest value to consider for being a maximum",
            "optional": false,
            "value-key": "[HIGH]",
            "type": "Number",
            "integer": false
          }
        ]
      },
      "optional": true,
      "value-key": "[THRESHOLD]"
    },
    {
      "id": "opt_sum_subvols",
      "name": "opt_sum_subvols",
      "command-line-flag": "-sum-subvols",
      "description": "output the sum of the extrema subvolumes instead of each subvolume separately",
      "type": "Flag",
      "value-key": "[OPT_SUM_SUBVOLS]"
    },
    {
      "id": "opt_consolidate_mode",
      "name": "opt_consolidate_mode",
      "command-line-flag": "-consolidate-mode",
      "description": "use consolidation of local minima instead of a large neighborhood",
      "type": "Flag",
      "value-key": "[OPT_CONSOLIDATE_MODE]"
    },
    {
      "id": "opt_only_maxima",
      "name": "opt_only_maxima",
      "command-line-flag": "-only-maxima",
      "description": "only find the maxima",
      "type": "Flag",
      "value-key": "[OPT_ONLY_MAXIMA]"
    },
    {
      "id": "opt_only_minima",
      "name": "opt_only_minima",
      "command-line-flag": "-only-minima",
      "description": "only find the minima",
      "type": "Flag",
      "value-key": "[OPT_ONLY_MINIMA]"
    },
    {
      "id": "opt_subvolume_subvolume",
      "name": "opt_subvolume_subvolume",
      "command-line-flag": "-subvolume",
      "description": "select a single subvolume to find extrema in: the subvolume number or name",
      "optional": true,
      "value-key": "[OPT_SUBVOLUME_SUBVOLUME]",
      "type": "String"
    }
  ],
  "output-files": [
    {
      "id": "volume_out",
      "name": "volume_out",
      "path-template": "[VOLUME_OUT]",
      "description": "the output extrema volume"
    }
  ],
  "url": "https://github.com/Washington-University/workbench"
}
