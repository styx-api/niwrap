{
  "tool-version": "1.5.0",
  "name": "metric-extrema",
  "author": "Connectome Workbench Developers",
  "command-line": "wb_command -metric-extrema [SURFACE] [METRIC_IN] [DISTANCE] [METRIC_OUT] [PRESMOOTH] [OPT_ROI_ROI_METRIC] [THRESHOLD] [OPT_SUM_COLUMNS] [OPT_CONSOLIDATE_MODE] [OPT_ONLY_MAXIMA] [OPT_ONLY_MINIMA] [OPT_COLUMN_COLUMN]",
  "container-image": {
    "type": "docker",
    "image": "brainlife/connectome_workbench:1.5.0-freesurfer-update"
  },
  "description": "Find extrema in a metric file.\n\nFinds extrema in a metric file, such that no two extrema of the same type are within <distance> of each other.  The extrema are labeled as -1 for minima, 1 for maxima, 0 otherwise.  If -only-maxima or -only-minima is specified, then it will ignore extrema not of the specified type.  These options are mutually exclusive.\n\nIf -roi is specified, not only is data outside the roi not used, but any vertex on the edge of the ROI will never be counted as an extrema, in case the ROI cuts across a gradient, which would otherwise generate extrema where there should be none.\n\nIf -sum-columns is specified, these extrema columns are summed, and the output has a single column with this result.\n\nBy default, a datapoint is an extrema only if it is more extreme than every other datapoint that is within <distance> from it.  If -consolidate-mode is used, it instead starts by finding all datapoints that are more extreme than their immediate neighbors, then while there are any extrema within <distance> of each other, take the two extrema closest to each other and merge them into one by a weighted average based on how many original extrema have been merged into each.\n\nBy default, all input columns are used with no smoothing, use -column to specify a single column to use, and -presmooth to smooth the input before finding the extrema.",
  "schema-version": "0.5",
  "inputs": [
    {
      "id": "surface",
      "name": "surface",
      "description": "the surface to use for distance information",
      "optional": false,
      "value-key": "[SURFACE]",
      "type": "File"
    },
    {
      "id": "metric_in",
      "name": "metric_in",
      "description": "the metric to find the extrema of",
      "optional": false,
      "value-key": "[METRIC_IN]",
      "type": "File"
    },
    {
      "id": "distance",
      "name": "distance",
      "description": "the minimum distance between identified extrema of the same type",
      "optional": false,
      "value-key": "[DISTANCE]",
      "type": "Number",
      "integer": false
    },
    {
      "id": "metric_out",
      "name": "metric_out",
      "type": "String",
      "description": "the output extrema metric",
      "optional": false,
      "value-key": "[METRIC_OUT]"
    },
    {
      "id": "presmooth",
      "name": "presmooth",
      "description": "smooth the metric before finding extrema",
      "type": {
        "id": "presmooth",
        "name": "presmooth",
        "description": "smooth the metric before finding extrema",
        "command-line": "-presmooth [KERNEL] [OPT_FWHM]",
        "inputs": [
          {
            "id": "kernel",
            "name": "kernel",
            "description": "the size of the gaussian smoothing kernel in mm, as sigma by default",
            "optional": false,
            "value-key": "[KERNEL]",
            "type": "Number",
            "integer": false
          },
          {
            "id": "opt_fwhm",
            "name": "opt_fwhm",
            "command-line-flag": "-fwhm",
            "description": "kernel size is FWHM, not sigma",
            "type": "Flag",
            "value-key": "[OPT_FWHM]"
          }
        ]
      },
      "optional": true,
      "value-key": "[PRESMOOTH]"
    },
    {
      "id": "opt_roi_roi_metric",
      "name": "opt_roi_roi_metric",
      "command-line-flag": "-roi",
      "description": "ignore values outside the selected area: the area to find extrema in, as a metric",
      "optional": true,
      "value-key": "[OPT_ROI_ROI_METRIC]",
      "type": "File"
    },
    {
      "id": "threshold",
      "name": "threshold",
      "description": "ignore small extrema",
      "type": {
        "id": "threshold",
        "name": "threshold",
        "description": "ignore small extrema",
        "command-line": "-threshold [LOW] [HIGH]",
        "inputs": [
          {
            "id": "low",
            "name": "low",
            "description": "the largest value to consider for being a minimum",
            "optional": false,
            "value-key": "[LOW]",
            "type": "Number",
            "integer": false
          },
          {
            "id": "high",
            "name": "high",
            "description": "the smallest value to consider for being a maximum",
            "optional": false,
            "value-key": "[HIGH]",
            "type": "Number",
            "integer": false
          }
        ]
      },
      "optional": true,
      "value-key": "[THRESHOLD]"
    },
    {
      "id": "opt_sum_columns",
      "name": "opt_sum_columns",
      "command-line-flag": "-sum-columns",
      "description": "output the sum of the extrema columns instead of each column separately",
      "type": "Flag",
      "value-key": "[OPT_SUM_COLUMNS]"
    },
    {
      "id": "opt_consolidate_mode",
      "name": "opt_consolidate_mode",
      "command-line-flag": "-consolidate-mode",
      "description": "use consolidation of local minima instead of a large neighborhood",
      "type": "Flag",
      "value-key": "[OPT_CONSOLIDATE_MODE]"
    },
    {
      "id": "opt_only_maxima",
      "name": "opt_only_maxima",
      "command-line-flag": "-only-maxima",
      "description": "only find the maxima",
      "type": "Flag",
      "value-key": "[OPT_ONLY_MAXIMA]"
    },
    {
      "id": "opt_only_minima",
      "name": "opt_only_minima",
      "command-line-flag": "-only-minima",
      "description": "only find the minima",
      "type": "Flag",
      "value-key": "[OPT_ONLY_MINIMA]"
    },
    {
      "id": "opt_column_column",
      "name": "opt_column_column",
      "command-line-flag": "-column",
      "description": "select a single column to find extrema in: the column number or name",
      "optional": true,
      "value-key": "[OPT_COLUMN_COLUMN]",
      "type": "String"
    }
  ],
  "output-files": [
    {
      "id": "metric_out",
      "name": "metric_out",
      "path-template": "[METRIC_OUT]",
      "description": "the output extrema metric"
    }
  ],
  "url": "https://github.com/Washington-University/workbench"
}
