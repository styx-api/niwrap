{
  "tool-version": "24.2.06",
  "name": "qdelaunay",
  "author": "AFNI Developers",
  "description": "Compute the Delaunay triangulation using Qhull.",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "qdelaunay [INPUT_FILE] [FURTHEST_SITE] [TRIANGULATED_OUTPUT] [JOGGLED_INPUT] [JOGGLE_RANGE] [SEARCH_SIMPLEX] [POINT_INFINITY] [DELAUNAY_VISIBLE] [DELAUNAY_REGIONS] [TRACE_LEVEL] [CHECK] [STATISTICS] [VERIFY] [OUTPUT_STDOUT] [FACETS_SUMMARY] [INPUT_FILE_OPTION] [OUTPUT_FILE_OPTION] [TRACE_POINT] [TRACE_MERGE] [TRACE_MERGE_WIDTH] [STOP_POINT] [STOP_CONE_POINT] [CENTRUM_RADIUS] [MAX_ANGLE_COSINE] [PERTURB_FACTOR] [MIN_FACET_WIDTH] [FACET_DUMP] [GEOMVIEW] [VERTICES_INCIDENT] [MATHEMATICA] [OFF_FORMAT] [POINT_COORDINATES] [SUMMARY]",
  "inputs": [
    {
      "description": "Input file containing point coordinates.",
      "value-key": "[INPUT_FILE]",
      "type": "File",
      "optional": false,
      "id": "input_file",
      "name": "Input file"
    },
    {
      "command-line-flag": "Qu",
      "description": "Compute furthest-site Delaunay triangulation",
      "value-key": "[FURTHEST_SITE]",
      "type": "Flag",
      "id": "furthest_site",
      "name": "Furthest-site Delaunay flag"
    },
    {
      "command-line-flag": "Qt",
      "description": "Triangulated output",
      "value-key": "[TRIANGULATED_OUTPUT]",
      "type": "Flag",
      "id": "triangulated_output",
      "name": "Triangulated output flag"
    },
    {
      "command-line-flag": "QJ",
      "description": "Joggled input instead of merged facets",
      "value-key": "[JOGGLED_INPUT]",
      "type": "Flag",
      "id": "joggled_input",
      "name": "Joggled input flag"
    },
    {
      "command-line-flag": "QJn",
      "description": "Randomly joggle input in range [-n,n]",
      "value-key": "[JOGGLE_RANGE]",
      "type": "Number",
      "optional": true,
      "id": "joggle_range",
      "name": "Joggle range",
      "integer": false
    },
    {
      "command-line-flag": "Qs",
      "description": "Search all points for the initial simplex",
      "value-key": "[SEARCH_SIMPLEX]",
      "type": "Flag",
      "id": "search_simplex",
      "name": "Search simplex flag"
    },
    {
      "command-line-flag": "Qz",
      "description": "Add point-at-infinity to Delaunay triangulation",
      "value-key": "[POINT_INFINITY]",
      "type": "Flag",
      "id": "point_infinity",
      "name": "Point-at-infinity flag"
    },
    {
      "command-line-flag": "QGn",
      "description": "Print Delaunay region if visible from point n, -n if not",
      "value-key": "[DELAUNAY_VISIBLE]",
      "type": "String",
      "optional": true,
      "id": "delaunay_visible",
      "name": "Delaunay region visibility"
    },
    {
      "command-line-flag": "QVn",
      "description": "Print Delaunay regions that include point n, -n if not",
      "value-key": "[DELAUNAY_REGIONS]",
      "type": "String",
      "optional": true,
      "id": "delaunay_regions",
      "name": "Delaunay regions inclusion"
    },
    {
      "command-line-flag": "T4",
      "description": "Trace at level n, 4=all, 5=mem/gauss, -1= events",
      "value-key": "[TRACE_LEVEL]",
      "type": "Number",
      "optional": true,
      "id": "trace_level",
      "name": "Trace level"
    },
    {
      "command-line-flag": "Tc",
      "description": "Check frequently during execution",
      "value-key": "[CHECK]",
      "type": "Flag",
      "id": "check",
      "name": "Check frequently flag"
    },
    {
      "command-line-flag": "Ts",
      "description": "Print statistics",
      "value-key": "[STATISTICS]",
      "type": "Flag",
      "id": "statistics",
      "name": "Print statistics flag"
    },
    {
      "command-line-flag": "Tv",
      "description": "Verify result: structure, convexity, and in-circle test",
      "value-key": "[VERIFY]",
      "type": "Flag",
      "id": "verify",
      "name": "Verify result flag"
    },
    {
      "command-line-flag": "Tz",
      "description": "Send all output to stdout",
      "value-key": "[OUTPUT_STDOUT]",
      "type": "Flag",
      "id": "output_stdout",
      "name": "Output to stdout flag"
    },
    {
      "command-line-flag": "TFn",
      "description": "Report summary when n or more facets created",
      "value-key": "[FACETS_SUMMARY]",
      "type": "Number",
      "optional": true,
      "id": "facets_summary",
      "name": "Facets summary"
    },
    {
      "command-line-flag": "TI",
      "description": "Input data from file, no spaces or single quotes",
      "value-key": "[INPUT_FILE_OPTION]",
      "type": "File",
      "optional": true,
      "id": "input_file_option",
      "name": "Input option file"
    },
    {
      "command-line-flag": "TO",
      "description": "Output results to file, may be enclosed in single quotes",
      "value-key": "[OUTPUT_FILE_OPTION]",
      "type": "File",
      "optional": true,
      "id": "output_file_option",
      "name": "Output option file"
    },
    {
      "command-line-flag": "TPn",
      "description": "Turn on tracing when point n added to hull",
      "value-key": "[TRACE_POINT]",
      "type": "Number",
      "optional": true,
      "id": "trace_point",
      "name": "Trace point flag"
    },
    {
      "command-line-flag": "TMn",
      "description": "Turn on tracing at merge n",
      "value-key": "[TRACE_MERGE]",
      "type": "Number",
      "optional": true,
      "id": "trace_merge",
      "name": "Trace merge flag"
    },
    {
      "command-line-flag": "TWn",
      "description": "Trace merge facets when width > n",
      "value-key": "[TRACE_MERGE_WIDTH]",
      "type": "Number",
      "optional": true,
      "id": "trace_merge_width",
      "name": "Trace merge width flag"
    },
    {
      "command-line-flag": "TVn",
      "description": "Stop Qhull after adding point n, -n for before",
      "value-key": "[STOP_POINT]",
      "type": "Number",
      "optional": true,
      "id": "stop_point",
      "name": "Stop at point flag"
    },
    {
      "command-line-flag": "TCn",
      "description": "Stop Qhull after building cone for point n",
      "value-key": "[STOP_CONE_POINT]",
      "type": "Number",
      "optional": true,
      "id": "stop_cone_point",
      "name": "Stop at cone point flag"
    },
    {
      "command-line-flag": "Cn",
      "description": "Radius of centrum (roundoff added). Merge facets if non-convex",
      "value-key": "[CENTRUM_RADIUS]",
      "type": "Number",
      "optional": true,
      "id": "centrum_radius",
      "name": "Centrum radius"
    },
    {
      "command-line-flag": "An",
      "description": "Cosine of maximum angle. Merge facets if cosine > n or non-convex",
      "value-key": "[MAX_ANGLE_COSINE]",
      "type": "Number",
      "optional": true,
      "id": "max_angle_cosine",
      "name": "Maximum angle cosine"
    },
    {
      "command-line-flag": "Rn",
      "description": "Randomly perturb computations by a factor of [1-n,1+n]",
      "value-key": "[PERTURB_FACTOR]",
      "type": "Number",
      "optional": true,
      "id": "perturb_factor",
      "name": "Perturb factor"
    },
    {
      "command-line-flag": "Wn",
      "description": "Min facet width for outside point (before roundoff)",
      "value-key": "[MIN_FACET_WIDTH]",
      "type": "Number",
      "optional": true,
      "id": "min_facet_width",
      "name": "Min facet width"
    },
    {
      "command-line-flag": "f",
      "description": "Facet dump",
      "value-key": "[FACET_DUMP]",
      "type": "Flag",
      "id": "facet_dump",
      "name": "Facet dump flag"
    },
    {
      "command-line-flag": "G",
      "description": "Geomview output",
      "value-key": "[GEOMVIEW]",
      "type": "Flag",
      "id": "geomview",
      "name": "Geomview flag"
    },
    {
      "command-line-flag": "i",
      "description": "Vertices incident to each Delaunay region",
      "value-key": "[VERTICES_INCIDENT]",
      "type": "Flag",
      "id": "vertices_incident",
      "name": "Vertices incident flag"
    },
    {
      "command-line-flag": "m",
      "description": "Mathematica output (2-d only, lifted to a paraboloid)",
      "value-key": "[MATHEMATICA]",
      "type": "Flag",
      "id": "mathematica",
      "name": "Mathematica flag"
    },
    {
      "command-line-flag": "o",
      "description": "OFF format (dim, points, and facets as a paraboloid)",
      "value-key": "[OFF_FORMAT]",
      "type": "Flag",
      "id": "off_format",
      "name": "OFF format flag"
    },
    {
      "command-line-flag": "p",
      "description": "Point coordinates (lifted to a paraboloid)",
      "value-key": "[POINT_COORDINATES]",
      "type": "Flag",
      "id": "point_coordinates",
      "name": "Point coordinates flag"
    },
    {
      "command-line-flag": "s",
      "description": "Summary (stderr)",
      "value-key": "[SUMMARY]",
      "type": "Flag",
      "id": "summary",
      "name": "Summary flag"
    }
  ],
  "schema-version": "0.5",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  }
}
