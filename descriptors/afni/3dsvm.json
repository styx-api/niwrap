{
  "tool-version": "24.2.06",
  "name": "3dsvm",
  "author": "AFNI Developers",
  "description": "Support vector machine analysis of brain data using the SVM-light package",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "3dsvm [TRAIN_VOL] [TRAIN_LABELS] [MASK] [NO_MODEL_MASK] [MODEL] [ALPHA] [BUCKET] [TYPE] [C_VALUE] [EPSILON] [KERNEL] [D_VALUE] [GAMMA] [S_VALUE] [R_VALUE] [MAX_ITERATIONS] [WOUT] [TEST_VOL] [PREDICTIONS] [CLASSOUT] [NOPRED_CENSORED] [NODETREND] [NOPRED_SCALE] [TEST_LABELS] [MULTICLASS] [HELP] [VERSION]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "command-line-flag": "-trainvol",
      "description": "A 3D+t AFNI brik dataset to be used for training.",
      "value-key": "[TRAIN_VOL]",
      "type": "File",
      "optional": true,
      "id": "train_vol",
      "name": "Training volume"
    },
    {
      "command-line-flag": "-trainlabels",
      "description": "Filename of class category .1D labels corresponding to the stimulus paradigm for the training data set.",
      "value-key": "[TRAIN_LABELS]",
      "type": "File",
      "optional": true,
      "id": "train_labels",
      "name": "Training labels"
    },
    {
      "command-line-flag": "-mask",
      "description": "Specify a mask dataset to only perform the analysis on non-zero mask voxels.",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask file"
    },
    {
      "command-line-flag": "-nomodelmask",
      "description": "Flag to enable the omission of a mask file. Required if '-mask' is not used.",
      "value-key": "[NO_MODEL_MASK]",
      "type": "Flag",
      "id": "no_model_mask",
      "name": "No model mask flag"
    },
    {
      "command-line-flag": "-model",
      "description": "The basename for the model brik containing the SVM model during training or testing.",
      "value-key": "[MODEL]",
      "type": "String",
      "optional": false,
      "id": "model",
      "name": "Model name"
    },
    {
      "command-line-flag": "-alpha",
      "description": "Write the alphas to a specified .1D file.",
      "value-key": "[ALPHA]",
      "type": "String",
      "optional": true,
      "id": "alpha",
      "name": "Alpha file"
    },
    {
      "command-line-flag": "-bucket",
      "description": "Outputs the sum of weighted linear support vectors written out to a functional (fim) brik file.",
      "value-key": "[BUCKET]",
      "type": "String",
      "optional": true,
      "id": "bucket",
      "name": "Bucket file"
    },
    {
      "command-line-flag": "-type",
      "description": "Specify type: classification (default) or regression.",
      "value-key": "[TYPE]",
      "type": "String",
      "optional": true,
      "id": "type",
      "name": "Type",
      "value-choices": ["classification", "regression"]
    },
    {
      "command-line-flag": "-c",
      "description": "Control SVM model complexity (C value).",
      "value-key": "[C_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "c_value",
      "name": "C value"
    },
    {
      "command-line-flag": "-e",
      "description": "Specify epsilon for regression.",
      "value-key": "[EPSILON]",
      "type": "Number",
      "optional": true,
      "id": "epsilon",
      "name": "Epsilon"
    },
    {
      "command-line-flag": "-kernel",
      "description": "Specify type of kernel function.",
      "value-key": "[KERNEL]",
      "type": "String",
      "optional": true,
      "id": "kernel",
      "name": "Kernel function",
      "value-choices": ["linear", "polynomial", "rbf", "sigmoid"]
    },
    {
      "command-line-flag": "-d",
      "description": "D parameter in polynomial kernel.",
      "value-key": "[D_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "d_value",
      "name": "D value"
    },
    {
      "command-line-flag": "-g",
      "description": "Gamma parameter in rbf kernel.",
      "value-key": "[GAMMA]",
      "type": "Number",
      "optional": true,
      "id": "gamma",
      "name": "Gamma"
    },
    {
      "command-line-flag": "-s",
      "description": "S parameter in sigmoid/poly kernel.",
      "value-key": "[S_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "s_value",
      "name": "S value"
    },
    {
      "command-line-flag": "-r",
      "description": "R parameter in sigmoid/poly kernel.",
      "value-key": "[R_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "r_value",
      "name": "R value"
    },
    {
      "command-line-flag": "-max_iterations",
      "description": "Specify the maximum number of iterations for the optimization. Default is 1 million.",
      "value-key": "[MAX_ITERATIONS]",
      "type": "Number",
      "optional": true,
      "id": "max_iterations",
      "name": "Maximum iterations"
    },
    {
      "command-line-flag": "-wout",
      "description": "Flag to output sum of weighted linear support vectors to the bucket file.",
      "value-key": "[WOUT]",
      "type": "Flag",
      "id": "wout",
      "name": "Weight output flag"
    },
    {
      "command-line-flag": "-testvol",
      "description": "A 3D or 3D+t AFNI brik dataset to be used for testing.",
      "value-key": "[TEST_VOL]",
      "type": "File",
      "optional": true,
      "id": "test_vol",
      "name": "Testing volume"
    },
    {
      "command-line-flag": "-predictions",
      "description": "Basename for .1D prediction files.",
      "value-key": "[PREDICTIONS]",
      "type": "String",
      "optional": true,
      "id": "predictions",
      "name": "Predictions"
    },
    {
      "command-line-flag": "-classout",
      "description": "Flag to specify that prediction files should be integer-valued, corresponding to class category decisions.",
      "value-key": "[CLASSOUT]",
      "type": "Flag",
      "id": "classout",
      "name": "Class-out flag"
    },
    {
      "command-line-flag": "-nopredcensored",
      "description": "Do not write predicted values for censored time-points to predictions file.",
      "value-key": "[NOPRED_CENSORED]",
      "type": "Flag",
      "id": "nopred_censored",
      "name": "No predicted censored flag"
    },
    {
      "command-line-flag": "-nodetrend",
      "description": "Flag to specify that prediction files should NOT be linearly detrended.",
      "value-key": "[NODETREND]",
      "type": "Flag",
      "id": "nodetrend",
      "name": "No detrend flag"
    },
    {
      "command-line-flag": "-nopredscale",
      "description": "Do not scale predictions. Values below 0.0 correspond to (class A) and values above 0.0 to (class B).",
      "value-key": "[NOPRED_SCALE]",
      "type": "Flag",
      "id": "nopred_scale",
      "name": "No prediction scaling flag"
    },
    {
      "command-line-flag": "-testlabels",
      "description": "Filename of 'true' class category .1D labels for the test dataset.",
      "value-key": "[TEST_LABELS]",
      "type": "File",
      "optional": true,
      "id": "test_labels",
      "name": "Testing labels"
    },
    {
      "command-line-flag": "-multiclass",
      "description": "Specify the multiclass algorithm for classification.",
      "value-key": "[MULTICLASS]",
      "type": "String",
      "optional": true,
      "id": "multiclass",
      "name": "Multiclass type",
      "value-choices": ["DAG", "vote"]
    },
    {
      "command-line-flag": "-help",
      "description": "Print help message",
      "value-key": "[HELP]",
      "type": "Flag",
      "id": "help",
      "name": "Help flag"
    },
    {
      "command-line-flag": "-version",
      "description": "Print version history",
      "value-key": "[VERSION]",
      "type": "Flag",
      "id": "version",
      "name": "Version flag"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "model_{output}.1D",
      "description": "Output model file in .1D format.",
      "id": "out_model",
      "name": "Output Model"
    },
    {
      "path-template": "alpha_{output}.1D",
      "description": "Output alphas file in .1D format.",
      "id": "out_alpha",
      "name": "Output Alphas"
    },
    {
      "path-template": "bucket_{output}.1D",
      "description": "Output bucket file in .1D format.",
      "id": "out_bucket",
      "name": "Output Bucket"
    },
    {
      "path-template": "predictions_{output}.1D",
      "description": "Output predictions file in .1D format.",
      "id": "out_predictions",
      "name": "Output Predictions"
    }
  ]
}
