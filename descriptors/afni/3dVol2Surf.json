{
  "tool-version": "24.2.06",
  "name": "3dVol2Surf",
  "author": "AFNI Developers",
  "description": "Map data from a volume domain to a surface domain",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "3dVol2Surf [SPEC_FILE] [SV] [GRID_PARENT] [MAP_FUNC] [SURF_A] [SURF_B] [OUT_1D] [OUT_NIML] [USE_NORMS] [NORM_LEN] [FIRST_NODE] [LAST_NODE] [DEBUG_LEVEL] [DNODE] [F_STEPS] [F_INDEX] [F_P1_MM] [F_PN_MM] [F_P1_FR] [F_PN_FR] [SKIP_COL_NODES] [SKIP_COL_1DINDEX] [SKIP_COL_I] [SKIP_COL_J] [SKIP_COL_K] [SKIP_COL_VALS] [NO_HEADERS] [SAVE_SEG_COORDS] [CMASK] [GP_INDEX] [OOB_INDEX] [OOB_VALUE] [OOM_VALUE] [OUTCOLS_AFNI_NSD] [OUTCOLS_1_RESULT] [OUTCOLS_RESULTS] [OUTCOLS_NSD_FORMAT] [HELP] [HIST] [VERSION] [KEEP_NORM_DIR] [REVERSE_NORM_DIR]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "description": "SUMA spec file",
      "value-key": "[SPEC_FILE]",
      "type": "File",
      "optional": false,
      "id": "spec_file",
      "name": "Spec file"
    },
    {
      "command-line-flag": "-sv",
      "description": "AFNI volume dataset mapped by the surface",
      "value-key": "[SV]",
      "type": "File",
      "optional": false,
      "id": "sv",
      "name": "Surface volume"
    },
    {
      "command-line-flag": "-grid_parent",
      "description": "AFNI volume dataset used as a grid and orientation master for output",
      "value-key": "[GRID_PARENT]",
      "type": "File",
      "optional": false,
      "id": "grid_parent",
      "name": "Grid parent"
    },
    {
      "command-line-flag": "-map_func",
      "description": "Filter for values along the segment",
      "value-key": "[MAP_FUNC]",
      "type": "String",
      "optional": false,
      "id": "map_func",
      "name": "Map function"
    },
    {
      "command-line-flag": "-surf_A",
      "description": "Name of surface A from the spec file",
      "value-key": "[SURF_A]",
      "type": "String",
      "optional": false,
      "id": "surf_A",
      "name": "Surface A"
    },
    {
      "command-line-flag": "-surf_B",
      "description": "Name of surface B from the spec file",
      "value-key": "[SURF_B]",
      "type": "String",
      "optional": true,
      "id": "surf_B",
      "name": "Surface B"
    },
    {
      "command-line-flag": "-out_1D",
      "description": "Specify a 1D file for the output",
      "value-key": "[OUT_1D]",
      "type": "String",
      "optional": true,
      "id": "out_1D",
      "name": "Output 1D file"
    },
    {
      "command-line-flag": "-out_niml",
      "description": "Specify a niml file for the output",
      "value-key": "[OUT_NIML]",
      "type": "String",
      "optional": true,
      "id": "out_niml",
      "name": "Output niml file"
    },
    {
      "command-line-flag": "-use_norms",
      "description": "Use normals for second surface",
      "value-key": "[USE_NORMS]",
      "type": "Flag",
      "id": "use_norms",
      "name": "Use norms"
    },
    {
      "command-line-flag": "-norm_len",
      "description": "Length for node normals",
      "value-key": "[NORM_LEN]",
      "type": "Number",
      "optional": true,
      "id": "norm_len",
      "name": "Normal length"
    },
    {
      "command-line-flag": "-first_node",
      "description": "Skip all previous nodes",
      "value-key": "[FIRST_NODE]",
      "type": "Number",
      "optional": true,
      "id": "first_node",
      "name": "First node"
    },
    {
      "command-line-flag": "-last_node",
      "description": "Skip all following nodes",
      "value-key": "[LAST_NODE]",
      "type": "Number",
      "optional": true,
      "id": "last_node",
      "name": "Last node"
    },
    {
      "command-line-flag": "-debug",
      "description": "Verbose output level",
      "value-key": "[DEBUG_LEVEL]",
      "type": "Number",
      "optional": true,
      "id": "debug_level",
      "name": "Debug level"
    },
    {
      "command-line-flag": "-dnode",
      "description": "Node for debug",
      "value-key": "[DNODE]",
      "type": "Number",
      "optional": true,
      "id": "dnode",
      "name": "Debug node"
    },
    {
      "command-line-flag": "-f_steps",
      "description": "Number of steps along each segment (defines the number of evenly spaced points along each segment)",
      "value-key": "[F_STEPS]",
      "type": "Number",
      "optional": true,
      "id": "f_steps",
      "name": "Number of steps"
    },
    {
      "command-line-flag": "-f_index",
      "description": "Whether to use all segment point values or only those corresponding to unique volume voxels",
      "value-key": "[F_INDEX]",
      "type": "String",
      "optional": true,
      "id": "f_index",
      "name": "Index type"
    },
    {
      "command-line-flag": "-f_p1_mm",
      "description": "Distance in millimeters to add to the first point of each line segment",
      "value-key": "[F_P1_MM]",
      "type": "Number",
      "optional": true,
      "id": "f_p1_mm",
      "name": "First point distance in mm"
    },
    {
      "command-line-flag": "-f_pn_mm",
      "description": "Distance in millimeters to add to the second point of each line segment",
      "value-key": "[F_PN_MM]",
      "type": "Number",
      "optional": true,
      "id": "f_pn_mm",
      "name": "Second point distance in mm"
    },
    {
      "command-line-flag": "-f_p1_fr",
      "description": "Fractional distance to add to the first point of each line segment",
      "value-key": "[F_P1_FR]",
      "type": "Number",
      "optional": true,
      "id": "f_p1_fr",
      "name": "First point fractional distance"
    },
    {
      "command-line-flag": "-f_pn_fr",
      "description": "Fractional distance to add to the second point of each line segment",
      "value-key": "[F_PN_FR]",
      "type": "Number",
      "optional": true,
      "id": "f_pn_fr",
      "name": "Second point fractional distance"
    },
    {
      "command-line-flag": "-skip_col_nodes",
      "description": "Do not output node column",
      "value-key": "[SKIP_COL_NODES]",
      "type": "Flag",
      "id": "skip_col_nodes",
      "name": "Skip nodes column"
    },
    {
      "command-line-flag": "-skip_col_1dindex",
      "description": "Do not output 1dindex column",
      "value-key": "[SKIP_COL_1DINDEX]",
      "type": "Flag",
      "id": "skip_col_1dindex",
      "name": "Skip 1dindex column"
    },
    {
      "command-line-flag": "-skip_col_i",
      "description": "Do not output i column",
      "value-key": "[SKIP_COL_I]",
      "type": "Flag",
      "id": "skip_col_i",
      "name": "Skip i column"
    },
    {
      "command-line-flag": "-skip_col_j",
      "description": "Do not output j column",
      "value-key": "[SKIP_COL_J]",
      "type": "Flag",
      "id": "skip_col_j",
      "name": "Skip j column"
    },
    {
      "command-line-flag": "-skip_col_k",
      "description": "Do not output k column",
      "value-key": "[SKIP_COL_K]",
      "type": "Flag",
      "id": "skip_col_k",
      "name": "Skip k column"
    },
    {
      "command-line-flag": "-skip_col_vals",
      "description": "Do not output vals column",
      "value-key": "[SKIP_COL_VALS]",
      "type": "Flag",
      "id": "skip_col_vals",
      "name": "Skip vals column"
    },
    {
      "command-line-flag": "-no_headers",
      "description": "Do not output column headers",
      "value-key": "[NO_HEADERS]",
      "type": "Flag",
      "id": "no_headers",
      "name": "No headers"
    },
    {
      "command-line-flag": "-save_seg_coords",
      "description": "Save segment coordinates to a file",
      "value-key": "[SAVE_SEG_COORDS]",
      "type": "String",
      "optional": true,
      "id": "save_seg_coords",
      "name": "Save segment coordinates"
    },
    {
      "command-line-flag": "-cmask",
      "description": "Command for dataset mask",
      "value-key": "[CMASK]",
      "type": "String",
      "optional": true,
      "id": "cmask",
      "name": "CMASK"
    },
    {
      "command-line-flag": "-gp_index",
      "description": "Choose grid_parent sub-brick",
      "value-key": "[GP_INDEX]",
      "type": "Number",
      "optional": true,
      "id": "gp_index",
      "name": "GP index"
    },
    {
      "command-line-flag": "-oob_index",
      "description": "Specify default index for out of bounds nodes",
      "value-key": "[OOB_INDEX]",
      "type": "Number",
      "optional": true,
      "id": "oob_index",
      "name": "Out of bounds index"
    },
    {
      "command-line-flag": "-oob_value",
      "description": "Specify default value for out of bounds nodes",
      "value-key": "[OOB_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "oob_value",
      "name": "Out of bounds value"
    },
    {
      "command-line-flag": "-oom_value",
      "description": "Specify default value for out of mask nodes",
      "value-key": "[OOM_VALUE]",
      "type": "Number",
      "optional": true,
      "id": "oom_value",
      "name": "Out of mask value"
    },
    {
      "command-line-flag": "-outcols_afni_NSD",
      "description": "Output nodes and one result column",
      "value-key": "[OUTCOLS_AFNI_NSD]",
      "type": "Flag",
      "id": "outcols_afni_nsd",
      "name": "Output AFNI NSD"
    },
    {
      "command-line-flag": "-outcols_1_result",
      "description": "Output only one result column",
      "value-key": "[OUTCOLS_1_RESULT]",
      "type": "Flag",
      "id": "outcols_1_result",
      "name": "Output one result column"
    },
    {
      "command-line-flag": "-outcols_results",
      "description": "Output only all result columns",
      "value-key": "[OUTCOLS_RESULTS]",
      "type": "Flag",
      "id": "outcols_results",
      "name": "Output all result columns"
    },
    {
      "command-line-flag": "-outcols_NSD_format",
      "description": "Output nodes and all results (NI_SURF_DSET format)",
      "value-key": "[OUTCOLS_NSD_FORMAT]",
      "type": "Flag",
      "id": "outcols_nsd_format",
      "name": "Output NSD format"
    },
    {
      "command-line-flag": "-help",
      "description": "Show this help",
      "value-key": "[HELP]",
      "type": "Flag",
      "id": "help",
      "name": "Help"
    },
    {
      "command-line-flag": "-hist",
      "description": "Show revision history",
      "value-key": "[HIST]",
      "type": "Flag",
      "id": "hist",
      "name": "History"
    },
    {
      "command-line-flag": "-version",
      "description": "Show version information",
      "value-key": "[VERSION]",
      "type": "Flag",
      "id": "version",
      "name": "Version"
    },
    {
      "command-line-flag": "-keep_norm_dir",
      "description": "Keep the direction of the normals",
      "value-key": "[KEEP_NORM_DIR]",
      "type": "Flag",
      "id": "keep_norm_dir",
      "name": "Keep normals direction"
    },
    {
      "command-line-flag": "-reverse_norm_dir",
      "description": "Reverse the normal directions",
      "value-key": "[REVERSE_NORM_DIR]",
      "type": "Flag",
      "id": "reverse_norm_dir",
      "name": "Reverse normals direction"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "[OUT_1D]",
      "description": "1D output file",
      "id": "out_1d_file",
      "name": "Output 1D file"
    },
    {
      "path-template": "[OUT_NIML]",
      "description": "NIML output file",
      "id": "out_niml_file",
      "name": "Output niml file"
    },
    {
      "path-template": "[SAVE_SEG_COORDS]",
      "description": "Segment coordinates output file",
      "id": "seg_coords_file",
      "name": "Segment coordinates file"
    }
  ]
}
