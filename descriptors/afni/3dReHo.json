{
  "tool-version": "24.2.06",
  "name": "3dReHo",
  "author": "AFNI Developers",
  "description": "3dReHo calculates Kendall's W per voxel using neighborhood voxels from 4D time series data set.",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "3dReHo [PREFIX] [INSET] [NNEIGH] [CHI_SQ] [MASK] [NEIGH_RAD] [NEIGH_X] [NEIGH_Y] [NEIGH_Z] [BOX_RAD] [BOX_X] [BOX_Y] [BOX_Z] [IN_ROIS]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "description": "Output file name part.",
      "value-key": "[PREFIX]",
      "type": "String",
      "optional": false,
      "id": "prefix",
      "name": "Prefix",
      "command-line-flag": "-prefix"
    },
    {
      "description": "Time series input file.",
      "value-key": "[INSET]",
      "type": "File",
      "optional": false,
      "id": "inset",
      "name": "Input Time Series File",
      "command-line-flag": "-inset"
    },
    {
      "command-line-flag": "-chi_sq",
      "description": "Switch to output Friedman chi-square value per voxel as a subbrick.",
      "value-key": "[CHI_SQ]",
      "type": "Flag",
      "id": "chi_sq",
      "name": "Friedman Chi-Square Output Flag"
    },
    {
      "command-line-flag": "-mask",
      "description": "Include a whole brain mask within which to calculate ReHo. Otherwise, data should be masked already.",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask File"
    },
    {
      "command-line-flag": "-nneigh",
      "description": "Number of voxels in neighborhood, inclusive; can be 7 (for facewise neighbors), 19 (for face- and edge-wise neighbors), 27 (for face-, edge-, and node-wise neighbors). Default is 27.",
      "value-key": "[NNEIGH]",
      "type": "String",
      "optional": true,
      "id": "nneigh",
      "name": "Neighborhood Voxel Count"
    },
    {
      "command-line-flag": "-neigh_RAD",
      "description": "Radius R of a desired neighborhood for voxelwise control, must be a floating point number >1. Examples: R=2.0 -> V=33, R=2.3 -> V=57, etc.",
      "value-key": "[NEIGH_RAD]",
      "type": "Number",
      "optional": true,
      "id": "neigh_rad",
      "name": "Neighborhood Radius"
    },
    {
      "command-line-flag": "-neigh_X",
      "description": "Semi-radius length A for ellipsoidal neighborhood.",
      "value-key": "[NEIGH_X]",
      "type": "Number",
      "optional": true,
      "id": "neigh_x",
      "name": "Neighborhood Semi-radius X"
    },
    {
      "command-line-flag": "-neigh_Y",
      "description": "Semi-radius length B for ellipsoidal neighborhood.",
      "value-key": "[NEIGH_Y]",
      "type": "Number",
      "optional": true,
      "id": "neigh_y",
      "name": "Neighborhood Semi-radius Y"
    },
    {
      "command-line-flag": "-neigh_Z",
      "description": "Semi-radius length C for ellipsoidal neighborhood.",
      "value-key": "[NEIGH_Z]",
      "type": "Number",
      "optional": true,
      "id": "neigh_z",
      "name": "Neighborhood Semi-radius Z"
    },
    {
      "command-line-flag": "-box_RAD",
      "description": "Cubic box radius BR centered on a given voxel for neighborhood control. Examples: BR=1 -> V=27, BR=2 -> V=125, etc.",
      "value-key": "[BOX_RAD]",
      "type": "Number",
      "optional": true,
      "id": "box_rad",
      "name": "Cubic Box Radius"
    },
    {
      "command-line-flag": "-box_X",
      "description": "Box volume neighborhood dimension X. Values put in get added in the +/- directions of each axis.",
      "value-key": "[BOX_X]",
      "type": "Number",
      "optional": true,
      "id": "box_x",
      "name": "Box Volume X"
    },
    {
      "command-line-flag": "-box_Y",
      "description": "Box volume neighborhood dimension Y. Values put in get added in the +/- directions of each axis.",
      "value-key": "[BOX_Y]",
      "type": "Number",
      "optional": true,
      "id": "box_y",
      "name": "Box Volume Y"
    },
    {
      "command-line-flag": "-box_Z",
      "description": "Box volume neighborhood dimension Z. Values put in get added in the +/- directions of each axis.",
      "value-key": "[BOX_Z]",
      "type": "Number",
      "optional": true,
      "id": "box_z",
      "name": "Box Volume Z"
    },
    {
      "command-line-flag": "-in_rois",
      "description": "Input a set of ROIs, each labeled with distinct integers. ReHo will be calculated per ROI.",
      "value-key": "[IN_ROIS]",
      "type": "File",
      "optional": true,
      "id": "in_rois",
      "name": "ROIs Input File"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "[PREFIX]+orig.BRIK",
      "description": "Output file containing ReHo/Kendall's W value per voxel.",
      "id": "reho_output",
      "name": "ReHo Output File"
    },
    {
      "path-template": "[PREFIX]_ROI_reho.vals",
      "description": "List of ROI ReHo values.",
      "id": "roi_reho_vals",
      "name": "ROI ReHo Values File"
    },
    {
      "path-template": "[PREFIX]+orig.BRIK[1]",
      "description": "Optional output subbrick containing Friedman chi-square value per voxel.",
      "id": "chi_square",
      "name": "Chi-Square Output File"
    },
    {
      "path-template": "[PREFIX]_ROI_reho.chi",
      "description": "ROI Chi-square values file.",
      "id": "roi_chi_vals",
      "name": "ROI Chi-Square Values File"
    }
  ]
}
