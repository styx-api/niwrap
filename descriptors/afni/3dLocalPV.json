{
  "tool-version": "24.2.06",
  "name": "3dLocalPV",
  "author": "AFNI Developers",
  "description": "Computes the Singular Value Decomposition (SVD) of the time series from a neighborhood of each voxel in a 3D+time dataset, which serves as a smoothing method for the dataset.",
  "url": "https://afni.nimh.nih.gov/",
  "command-line": "3dLocalPV [INPUT_DATASET] [MASK] [AUTOMASK] [PREFIX] [PREFIX2] [EVPREFIX] [NEIGHBORHOOD] [DESPIKE] [POLORT] [VNORM] [VPROJ]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "description": "Input time series dataset",
      "value-key": "[INPUT_DATASET]",
      "type": "File",
      "optional": false,
      "id": "input_dataset",
      "name": "Input Dataset"
    },
    {
      "command-line-flag": "-mask",
      "description": "Restrict operations to this mask",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask Dataset"
    },
    {
      "command-line-flag": "-automask",
      "description": "Create a mask from the time series dataset",
      "value-key": "[AUTOMASK]",
      "type": "Flag",
      "id": "automask",
      "name": "Automask flag"
    },
    {
      "command-line-flag": "-prefix",
      "description": "Save SVD vector result into this new dataset [default = 'LocalPV']",
      "value-key": "[PREFIX]",
      "type": "String",
      "optional": true,
      "id": "prefix",
      "name": "Prefix for SVD result"
    },
    {
      "command-line-flag": "-prefix2",
      "description": "Save second principal vector into this new dataset [default = don't save it]",
      "value-key": "[PREFIX2]",
      "type": "String",
      "optional": true,
      "id": "prefix2",
      "name": "Prefix for second principal vector"
    },
    {
      "command-line-flag": "-evprefix",
      "description": "Save singular value at each voxel into this dataset [default = don't save]",
      "value-key": "[EVPREFIX]",
      "type": "String",
      "optional": true,
      "id": "evprefix",
      "name": "Prefix for singular value"
    },
    {
      "command-line-flag": "-nbhd",
      "description": "Neighborhood definition (e.g., 'SPHERE(5)', 'TOHD(7)', etc.)",
      "value-key": "[NEIGHBORHOOD]",
      "type": "String",
      "optional": true,
      "id": "neighborhood",
      "name": "Neighborhood"
    },
    {
      "command-line-flag": "-despike",
      "description": "Remove time series spikes from input dataset",
      "value-key": "[DESPIKE]",
      "type": "Flag",
      "id": "despike",
      "name": "Despike flag"
    },
    {
      "command-line-flag": "-polort",
      "description": "Detrending",
      "value-key": "[POLORT]",
      "type": "Number",
      "optional": true,
      "id": "polort",
      "name": "Polort"
    },
    {
      "command-line-flag": "-vnorm",
      "description": "Normalize data vectors [strongly recommended]",
      "value-key": "[VNORM]",
      "type": "Flag",
      "id": "vnorm",
      "name": "Vnorm flag"
    },
    {
      "command-line-flag": "-vproj",
      "description": "Project central data time series onto local SVD vector; if followed by '2', then the central data time series will be projected on the 2-dimensional subspace spanned by the first 2 principal SVD vectors. [default: just output principal singular vector]",
      "value-key": "[VPROJ]",
      "type": "String",
      "optional": true,
      "id": "vproj",
      "name": "Vproj"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "[PREFIX].nii.gz",
      "description": "SVD vector result dataset",
      "id": "svd_vector_result",
      "name": "SVD vector result"
    },
    {
      "path-template": "[PREFIX2].nii.gz",
      "description": "Second principal vector dataset",
      "id": "second_principal_vector",
      "name": "Second principal vector"
    },
    {
      "path-template": "[EVPREFIX].nii.gz",
      "description": "Singular value at each voxel dataset",
      "id": "singular_value",
      "name": "Singular value"
    }
  ]
}
