{
  "tool-version": "24.2.06",
  "name": "3dpc",
  "author": "AFNI Developers",
  "description": "Principal Component Analysis of 3D Datasets",
  "command-line": "3dpc [DATASETS] [DMEAN] [VMEAN] [VNORM] [NORMALIZE] [NSCALE] [PCSAVE] [REDUCE] [PREFIX] [DUMMY_LINES] [VERBOSE] [QUIET] [EIGONLY] [FLOAT] [MASK]",
  "container-image": {
    "type": "docker",
    "image": "afni/afni_make_build:AFNI_24.2.06"
  },
  "inputs": [
    {
      "description": "Input dataset(s) with sub-brick selector list support",
      "value-key": "[DATASETS]",
      "type": "File",
      "list": true,
      "optional": false,
      "id": "datasets",
      "name": "Input datasets"
    },
    {
      "command-line-flag": "-dmean",
      "description": "Remove the mean from each input brick (across space)",
      "value-key": "[DMEAN]",
      "type": "Flag",
      "id": "dmean",
      "name": "Demean across space flag"
    },
    {
      "command-line-flag": "-vmean",
      "description": "Remove the mean from each input voxel (across bricks)",
      "value-key": "[VMEAN]",
      "type": "Flag",
      "id": "vmean",
      "name": "Demean across bricks flag"
    },
    {
      "command-line-flag": "-vnorm",
      "description": "L2 normalize each input voxel time series",
      "value-key": "[VNORM]",
      "type": "Flag",
      "id": "vnorm",
      "name": "Voxel normalization flag"
    },
    {
      "command-line-flag": "-normalize",
      "description": "L2 normalize each input brick (after mean subtraction)",
      "value-key": "[NORMALIZE]",
      "type": "Flag",
      "id": "normalize",
      "name": "Brick normalization flag"
    },
    {
      "command-line-flag": "-nscale",
      "description": "Scale the covariance matrix by the number of samples",
      "value-key": "[NSCALE]",
      "type": "Flag",
      "id": "nscale",
      "name": "Scale covariance matrix flag"
    },
    {
      "command-line-flag": "-pcsave",
      "description": "'sss' is the number of components to save in the output",
      "value-key": "[PCSAVE]",
      "type": "String",
      "optional": true,
      "id": "pcsave",
      "name": "Save components"
    },
    {
      "command-line-flag": "-reduce",
      "description": "Compute a dimensionally reduced dataset with top 'r' eigenvalues and write to disk in dataset 'pp'",
      "value-key": "[REDUCE]",
      "type": "String",
      "list": true,
      "min-list-entries": 2,
      "max-list-entries": 2,
      "optional": true,
      "id": "reduce",
      "name": "Dimensionally reduced output"
    },
    {
      "command-line-flag": "-prefix",
      "description": "Name for the output dataset",
      "value-key": "[PREFIX]",
      "type": "String",
      "optional": true,
      "id": "prefix",
      "name": "Prefix for output dataset"
    },
    {
      "command-line-flag": "-1ddum",
      "description": "Add 'ddd' dummy lines to the top of each *.1D file",
      "value-key": "[DUMMY_LINES]",
      "type": "Number",
      "integer": true,
      "optional": true,
      "id": "dummy_lines",
      "name": "Number of dummy lines"
    },
    {
      "command-line-flag": "-verbose",
      "description": "Print progress reports during the computations",
      "value-key": "[VERBOSE]",
      "type": "Flag",
      "id": "verbose",
      "name": "Verbose flag"
    },
    {
      "command-line-flag": "-quiet",
      "description": "Don't print progress reports",
      "value-key": "[QUIET]",
      "type": "Flag",
      "id": "quiet",
      "name": "Quiet flag"
    },
    {
      "command-line-flag": "-eigonly",
      "description": "Only compute eigenvalues, write them to 'pname'_eig.1D, then stop",
      "value-key": "[EIGONLY]",
      "type": "Flag",
      "id": "eigonly",
      "name": "Eigenvalues only flag"
    },
    {
      "command-line-flag": "-float",
      "description": "Save eigen-bricks as floats (default = shorts)",
      "value-key": "[FLOAT]",
      "type": "Flag",
      "id": "float",
      "name": "Store eigen-bricks as floats"
    },
    {
      "command-line-flag": "-mask",
      "description": "Use the 0 sub-brick of dataset 'mset' as a mask indicating which voxels to analyze",
      "value-key": "[MASK]",
      "type": "File",
      "optional": true,
      "id": "mask",
      "name": "Mask file"
    }
  ],
  "schema-version": "0.5",
  "output-files": [
    {
      "path-template": "[PREFIX]+orig.BRIK",
      "description": "Output dataset file",
      "id": "output_dataset",
      "name": "Output BRIK file"
    },
    {
      "path-template": "[PREFIX]+orig.HEAD",
      "description": "Output dataset header file",
      "id": "output_header",
      "name": "Output HEAD file"
    },
    {
      "path-template": "[PREFIX]_eig.1D",
      "description": "File with computed eigenvalues",
      "id": "output_eig",
      "name": "Eigenvalues file"
    },
    {
      "path-template": "[PREFIX]_vec.1D",
      "description": "File with all eigen-timeseries",
      "id": "output_vec",
      "name": "Eigen-timeseries file"
    },
    {
      "path-template": "[PREFIX][NN].1D",
      "description": "File with individual eigenvalue timeseries",
      "id": "output_individual_vec",
      "name": "Individual eigen-timeseries file"
    }
  ],
  "url": "https://afni.nimh.nih.gov/"
}
