{
  "command": "-probtrackx-dot-convert",
  "short_description": "CONVERT A .DOT FILE FROM PROBTRACKX TO CIFTI",
  "help_text": "NOTE: exactly one -row option and one -col option must be used.\n\nIf the input file does not have its indexes sorted in the correct ordering, this command may take longer than expected.  Specifying -transpose will transpose the input matrix before trying to put its values into the cifti file, which is currently needed for at least matrix2 in order to display it as intended.  How the cifti file is displayed is based on which -row option is specified: if -row-voxels is specified, then it will display data on volume slices.  The label names in the label volume(s) must have the following names, other names are ignored:\n\n\nCORTEX_LEFT\nCORTEX_RIGHT\nCEREBELLUM\nACCUMBENS_LEFT\nACCUMBENS_RIGHT\nALL_GREY_MATTER\nALL_WHITE_MATTER\nAMYGDALA_LEFT\nAMYGDALA_RIGHT\nBRAIN_STEM\nCAUDATE_LEFT\nCAUDATE_RIGHT\nCEREBELLAR_WHITE_MATTER_LEFT\nCEREBELLAR_WHITE_MATTER_RIGHT\nCEREBELLUM_LEFT\nCEREBELLUM_RIGHT\nCEREBRAL_WHITE_MATTER_LEFT\nCEREBRAL_WHITE_MATTER_RIGHT\nCORTEX\nDIENCEPHALON_VENTRAL_LEFT\nDIENCEPHALON_VENTRAL_RIGHT\nHIPPOCAMPUS_LEFT\nHIPPOCAMPUS_RIGHT\nHIPPOCAMPUS_DENTATE_LEFT\nHIPPOCAMPUS_DENTATE_RIGHT\nINVALID\nOTHER\nOTHER_GREY_MATTER\nOTHER_WHITE_MATTER\nPALLIDUM_LEFT\nPALLIDUM_RIGHT\nPUTAMEN_LEFT\nPUTAMEN_RIGHT\nTHALAMUS_LEFT\nTHALAMUS_RIGHT",
  "version_info": [
     "Connectome Workbench",
     "Type: Command Line Application",
     "Version: 2.1.0",
     "Qt Compiled Version: 5.15.3",
     "Qt Runtime Version: 5.15.3",
     "Commit: unknown",
     "Commit Date: unknown",
     "Compiler: c++ (/usr/bin)",
     "Compiler Version: 11.4.0",
     "Compiled Debug: NO",
     "Operating System: Linux",
     "Compiled with OpenMP: YES"
  ],
  "params": [
    {
      "key": 1,
      "short_name": "dot-file",
      "description": "input .dot file",
      "type": "String"
    }
  ],
  "outputs": [
    {
      "key": 2,
      "short_name": "cifti-out",
      "description": "output cifti file",
      "type": "Cifti File"
    }
  ],
  "options": [
    {
      "key": 3,
      "option_switch": "-row-voxels",
      "description": "the output mapping along a row will be voxels",
      "params": [
        {
          "key": 1,
          "short_name": "voxel-list-file",
          "description": "a text file containing IJK indices for the voxels used",
          "type": "String"
        },
        {
          "key": 2,
          "short_name": "label-vol",
          "description": "a label volume with the dimensions and sform used, with structure labels",
          "type": "Volume File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 4,
      "option_switch": "-row-surface",
      "description": "the output mapping along a row will be surface vertices",
      "params": [
        {
          "key": 1,
          "short_name": "roi-metric",
          "description": "a metric file with positive values on all vertices used",
          "type": "Metric File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 9,
      "option_switch": "-row-cifti",
      "description": "take the mapping along a row from a cifti file",
      "params": [
        {
          "key": 1,
          "short_name": "cifti",
          "description": "the cifti file to take the mapping from",
          "type": "Cifti File"
        },
        {
          "key": 2,
          "short_name": "direction",
          "description": "which dimension to take the mapping along, ROW or COLUMN",
          "type": "String"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 5,
      "option_switch": "-col-voxels",
      "description": "the output mapping along a column will be voxels",
      "params": [
        {
          "key": 1,
          "short_name": "voxel-list-file",
          "description": "a text file containing IJK indices for the voxels used",
          "type": "String"
        },
        {
          "key": 2,
          "short_name": "label-vol",
          "description": "a label volume with the dimensions and sform used, with structure labels",
          "type": "Volume File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 6,
      "option_switch": "-col-surface",
      "description": "the output mapping along a column will be surface vertices",
      "params": [
        {
          "key": 1,
          "short_name": "roi-metric",
          "description": "a metric file with positive values on all vertices used",
          "type": "Metric File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 10,
      "option_switch": "-col-cifti",
      "description": "take the mapping along a column from a cifti file",
      "params": [
        {
          "key": 1,
          "short_name": "cifti",
          "description": "the cifti file to take the mapping from",
          "type": "Cifti File"
        },
        {
          "key": 2,
          "short_name": "direction",
          "description": "which dimension to take the mapping along, ROW or COLUMN",
          "type": "String"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 7,
      "option_switch": "-transpose",
      "description": "transpose the input matrix",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 8,
      "option_switch": "-make-symmetric",
      "description": "transform half-square input into full matrix output",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    }
  ],
  "repeatable_options": [
  ]
}

