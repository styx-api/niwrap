{
  "command": "-cifti-extrema",
  "short_description": "FIND EXTREMA IN A CIFTI FILE",
  "help_text": "Finds spatial locations in a cifti file that have more extreme values than all nearby locations in the same component (surface or volume structure).  The input cifti file must have a brain models mapping along the specified direction.  COLUMN is the direction that works on dtseries and dscalar.  For dconn, if it is symmetric use COLUMN, otherwise use ROW.",
  "version_info": [
     "Connectome Workbench",
     "Type: Command Line Application",
     "Version: 2.1.0",
     "Qt Compiled Version: 5.15.3",
     "Qt Runtime Version: 5.15.3",
     "Commit: unknown",
     "Commit Date: unknown",
     "Compiler: c++ (/usr/bin)",
     "Compiler Version: 11.4.0",
     "Compiled Debug: NO",
     "Operating System: Linux",
     "Compiled with OpenMP: YES"
  ],
  "params": [
    {
      "key": 1,
      "short_name": "cifti",
      "description": "the input cifti",
      "type": "Cifti File"
    },
    {
      "key": 2,
      "short_name": "surface-distance",
      "description": "the minimum distance between extrema of the same type, for surface components",
      "type": "Floating Point"
    },
    {
      "key": 3,
      "short_name": "volume-distance",
      "description": "the minimum distance between extrema of the same type, for volume components",
      "type": "Floating Point"
    },
    {
      "key": 4,
      "short_name": "direction",
      "description": "which dimension to find extrema along, ROW or COLUMN",
      "type": "String"
    }
  ],
  "outputs": [
    {
      "key": 5,
      "short_name": "cifti-out",
      "description": "the output cifti",
      "type": "Cifti File"
    }
  ],
  "options": [
    {
      "key": 6,
      "option_switch": "-left-surface",
      "description": "specify the left surface to use",
      "params": [
        {
          "key": 1,
          "short_name": "surface",
          "description": "the left surface file",
          "type": "Surface File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 7,
      "option_switch": "-right-surface",
      "description": "specify the right surface to use",
      "params": [
        {
          "key": 1,
          "short_name": "surface",
          "description": "the right surface file",
          "type": "Surface File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 8,
      "option_switch": "-cerebellum-surface",
      "description": "specify the cerebellum surface to use",
      "params": [
        {
          "key": 1,
          "short_name": "surface",
          "description": "the cerebellum surface file",
          "type": "Surface File"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 9,
      "option_switch": "-surface-presmooth",
      "description": "smooth on the surface before finding extrema",
      "params": [
        {
          "key": 1,
          "short_name": "surface-kernel",
          "description": "the size of the gaussian surface smoothing kernel in mm, as sigma by default",
          "type": "Floating Point"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 10,
      "option_switch": "-volume-presmooth",
      "description": "smooth volume components before finding extrema",
      "params": [
        {
          "key": 1,
          "short_name": "volume-kernel",
          "description": "the size of the gaussian volume smoothing kernel in mm, as sigma by default",
          "type": "Floating Point"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 17,
      "option_switch": "-presmooth-fwhm",
      "description": "smoothing kernel distances are FWHM, not sigma",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 11,
      "option_switch": "-threshold",
      "description": "ignore small extrema",
      "params": [
        {
          "key": 1,
          "short_name": "low",
          "description": "the largest value to consider for being a minimum",
          "type": "Floating Point"
        },
        {
          "key": 2,
          "short_name": "high",
          "description": "the smallest value to consider for being a maximum",
          "type": "Floating Point"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 12,
      "option_switch": "-merged-volume",
      "description": "treat volume components as if they were a single component",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 13,
      "option_switch": "-sum-maps",
      "description": "output the sum of the extrema maps instead of each map separately",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 14,
      "option_switch": "-consolidate-mode",
      "description": "use consolidation of local minima instead of a large neighborhood",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 15,
      "option_switch": "-only-maxima",
      "description": "only find the maxima",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 16,
      "option_switch": "-only-minima",
      "description": "only find the minima",
      "params": [
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    }
  ],
  "repeatable_options": [
  ]
}

