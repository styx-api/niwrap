{
  "command": "-cifti-convert",
  "short_description": "DUMP CIFTI MATRIX INTO OTHER FORMATS",
  "help_text": "This command is used to convert a full CIFTI matrix to/from formats that can be used by programs that don't understand CIFTI.  You must specify exactly one of -to-gifti-ext, -from-gifti-ext, -to-nifti, -from-nifti, -to-text, or -from-text.\n\nThis command cannot map surface-based parts of the cifti file to a spatially-correct volume file, or map volume-based data to the surface, see -volume-to-surface-mapping and -metric-to-volume-mapping instead (other commands such as -cifti-separate are also required).\n\nIf you want to write an existing CIFTI file with a different CIFTI version, see -file-convert, and its -cifti-version-convert option.\n\nIf you want part of the CIFTI file as a metric, label, or volume file, see -cifti-separate.  If you want to create a CIFTI file from metric and/or volume files, see the -cifti-create-* commands.\n\nIf you want to import a matrix in non-CIFTI format that is restricted to an ROI, first obtain a template CIFTI file matching that ROI (you can use -cifti-create-dense-scalar if you don't have such a file).  Use -cifti-convert to import it to CIFTI format, and you can then expand the file into a standard brainordinates space with -cifti-create-dense-from-template.  If you want to export only part of a CIFTI file, first create an roi-restricted CIFTI file with -cifti-restrict-dense-mapping.\n\nThe -transpose option to -from-gifti-ext is needed if the replacement binary file is in column-major order.\n\nThe -unit options accept these values:\n\nSECOND\nHERTZ\nMETER\nRADIAN",
  "version_info": [
     "Connectome Workbench",
     "Type: Command Line Application",
     "Version: 2.1.0",
     "Qt Compiled Version: 5.15.3",
     "Qt Runtime Version: 5.15.3",
     "Commit: unknown",
     "Commit Date: unknown",
     "Compiler: c++ (/usr/bin)",
     "Compiler Version: 11.4.0",
     "Compiled Debug: NO",
     "Operating System: Linux",
     "Compiled with OpenMP: YES"
  ],
  "params": [
  ],
  "outputs": [
  ],
  "options": [
    {
      "key": 1,
      "option_switch": "-to-gifti-ext",
      "description": "convert to GIFTI external binary",
      "params": [
        {
          "key": 1,
          "short_name": "cifti-in",
          "description": "the input cifti file",
          "type": "Cifti File"
        },
        {
          "key": 2,
          "short_name": "gifti-out",
          "description": "output - the output gifti file",
          "type": "String"
        }
      ],
      "outputs": [
      ],
      "options": [
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 2,
      "option_switch": "-from-gifti-ext",
      "description": "convert a GIFTI made with this command back into a CIFTI",
      "params": [
        {
          "key": 1,
          "short_name": "gifti-in",
          "description": "the input gifti file",
          "type": "String"
        }
      ],
      "outputs": [
        {
          "key": 2,
          "short_name": "cifti-out",
          "description": "the output cifti file",
          "type": "Cifti File"
        }
      ],
      "options": [
        {
          "key": 3,
          "option_switch": "-reset-timepoints",
          "description": "reset the mapping along rows to timepoints, taking length from the gifti file",
          "params": [
            {
              "key": 1,
              "short_name": "timestep",
              "description": "the desired time between frames",
              "type": "Floating Point"
            },
            {
              "key": 2,
              "short_name": "timestart",
              "description": "the desired time offset of the initial frame",
              "type": "Floating Point"
            }
          ],
          "outputs": [
          ],
          "options": [
            {
              "key": 3,
              "option_switch": "-unit",
              "description": "use a unit other than time",
              "params": [
                {
                  "key": 1,
                  "short_name": "unit",
                  "description": "unit identifier (default SECOND)",
                  "type": "String"
                }
              ],
              "outputs": [
              ],
              "options": [
              ],
              "repeatable_options": [
              ]
            }
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 4,
          "option_switch": "-reset-scalars",
          "description": "reset mapping along rows to scalars, taking length from the gifti file",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 6,
          "option_switch": "-column-reset-scalars",
          "description": "reset mapping along columns to scalar (useful for changing number of series in a sdseries file)",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 5,
          "option_switch": "-replace-binary",
          "description": "replace data with a binary file",
          "params": [
            {
              "key": 1,
              "short_name": "binary-in",
              "description": "the binary file that contains replacement data",
              "type": "String"
            }
          ],
          "outputs": [
          ],
          "options": [
            {
              "key": 2,
              "option_switch": "-flip-endian",
              "description": "byteswap the binary file",
              "params": [
              ],
              "outputs": [
              ],
              "options": [
              ],
              "repeatable_options": [
              ]
            },
            {
              "key": 3,
              "option_switch": "-transpose",
              "description": "transpose the binary file",
              "params": [
              ],
              "outputs": [
              ],
              "options": [
              ],
              "repeatable_options": [
              ]
            }
          ],
          "repeatable_options": [
          ]
        }
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 3,
      "option_switch": "-to-nifti",
      "description": "convert to NIFTI1",
      "params": [
        {
          "key": 1,
          "short_name": "cifti-in",
          "description": "the input cifti file",
          "type": "Cifti File"
        }
      ],
      "outputs": [
        {
          "key": 2,
          "short_name": "nifti-out",
          "description": "the output nifti file",
          "type": "Volume File"
        }
      ],
      "options": [
        {
          "key": 3,
          "option_switch": "-smaller-file",
          "description": "use better-fitting dimension lengths",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 4,
          "option_switch": "-smaller-dims",
          "description": "minimize the largest dimension, for tools that don't like large indices",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        }
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 4,
      "option_switch": "-from-nifti",
      "description": "convert a NIFTI (1 or 2) file made with this command back into CIFTI",
      "params": [
        {
          "key": 1,
          "short_name": "nifti-in",
          "description": "the input nifti file",
          "type": "Volume File"
        },
        {
          "key": 2,
          "short_name": "cifti-template",
          "description": "a cifti file with the dimension(s) and mapping(s) that should be used",
          "type": "Cifti File"
        }
      ],
      "outputs": [
        {
          "key": 3,
          "short_name": "cifti-out",
          "description": "the output cifti file",
          "type": "Cifti File"
        }
      ],
      "options": [
        {
          "key": 4,
          "option_switch": "-reset-timepoints",
          "description": "reset the mapping along rows to timepoints, taking length from the nifti file",
          "params": [
            {
              "key": 1,
              "short_name": "timestep",
              "description": "the desired time between frames",
              "type": "Floating Point"
            },
            {
              "key": 2,
              "short_name": "timestart",
              "description": "the desired time offset of the initial frame",
              "type": "Floating Point"
            }
          ],
          "outputs": [
          ],
          "options": [
            {
              "key": 3,
              "option_switch": "-unit",
              "description": "use a unit other than time",
              "params": [
                {
                  "key": 1,
                  "short_name": "unit",
                  "description": "unit identifier (default SECOND)",
                  "type": "String"
                }
              ],
              "outputs": [
              ],
              "options": [
              ],
              "repeatable_options": [
              ]
            }
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 5,
          "option_switch": "-reset-scalars",
          "description": "reset mapping along rows to scalars, taking length from the nifti file",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        }
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 5,
      "option_switch": "-to-text",
      "description": "convert to a plain text file",
      "params": [
        {
          "key": 1,
          "short_name": "cifti-in",
          "description": "the input cifti file",
          "type": "Cifti File"
        },
        {
          "key": 2,
          "short_name": "text-out",
          "description": "output - the output text file",
          "type": "String"
        }
      ],
      "outputs": [
      ],
      "options": [
        {
          "key": 3,
          "option_switch": "-col-delim",
          "description": "choose string to put between elements in a row",
          "params": [
            {
              "key": 1,
              "short_name": "delim-string",
              "description": "the string to use (default is a tab character)",
              "type": "String"
            }
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        }
      ],
      "repeatable_options": [
      ]
    },
    {
      "key": 6,
      "option_switch": "-from-text",
      "description": "convert from plain text to cifti",
      "params": [
        {
          "key": 1,
          "short_name": "text-in",
          "description": "the input text file",
          "type": "String"
        },
        {
          "key": 2,
          "short_name": "cifti-template",
          "description": "a cifti file with the dimension(s) and mapping(s) that should be used",
          "type": "Cifti File"
        }
      ],
      "outputs": [
        {
          "key": 3,
          "short_name": "cifti-out",
          "description": "the output cifti file",
          "type": "Cifti File"
        }
      ],
      "options": [
        {
          "key": 4,
          "option_switch": "-col-delim",
          "description": "specify string that is between elements in a row",
          "params": [
            {
              "key": 1,
              "short_name": "delim-string",
              "description": "the string to use (default is any whitespace)",
              "type": "String"
            }
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 5,
          "option_switch": "-reset-timepoints",
          "description": "reset the mapping along rows to timepoints, taking length from the text file",
          "params": [
            {
              "key": 1,
              "short_name": "timestep",
              "description": "the desired time between frames",
              "type": "Floating Point"
            },
            {
              "key": 2,
              "short_name": "timestart",
              "description": "the desired time offset of the initial frame",
              "type": "Floating Point"
            }
          ],
          "outputs": [
          ],
          "options": [
            {
              "key": 3,
              "option_switch": "-unit",
              "description": "use a unit other than time",
              "params": [
                {
                  "key": 1,
                  "short_name": "unit",
                  "description": "unit identifier (default SECOND)",
                  "type": "String"
                }
              ],
              "outputs": [
              ],
              "options": [
              ],
              "repeatable_options": [
              ]
            }
          ],
          "repeatable_options": [
          ]
        },
        {
          "key": 6,
          "option_switch": "-reset-scalars",
          "description": "reset mapping along rows to scalars, taking length from the text file",
          "params": [
          ],
          "outputs": [
          ],
          "options": [
          ],
          "repeatable_options": [
          ]
        }
      ],
      "repeatable_options": [
      ]
    }
  ],
  "repeatable_options": [
  ]
}

